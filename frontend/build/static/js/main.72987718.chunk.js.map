{"version":3,"sources":["components/layouts/MetaData.js","constants/productConstants.js","actions/productActions.js","components/product/Product.js","components/layouts/Loader.js","components/Home.js","components/layouts/Footer.js","components/layouts/Search.js","constants/userConstants.js","actions/userActions.js","components/layouts/Header.js","constants/cartConstants.js","actions/cartActions.js","components/review/ListReviews.js","components/product/ProductDetails.js","components/user/Login.js","components/user/Register.js","constants/orderConstants.js","constants/categoryConstants.js","store.js","reducers/productReducers.js","reducers/userReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","reducers/categoryReducers.js","components/user/Profile.js","components/user/UpdateProfile.js","components/user/UpdatePassword.js","components/user/ForgotPassword.js","components/user/NewPassword.js","components/cart/Cart.js","components/cart/CheckoutSteps.js","components/cart/Shipping.js","actions/orderActions.js","components/cart/ConfirmOrder.js","components/cart/Payment.js","components/cart/OrderSuccess.js","components/order/ListOrders.js","components/admin/Sidebar.js","components/admin/Dashboard.js","components/admin/ProductsList.js","actions/categoryActions.js","components/admin/NewProduct.js","components/admin/UpdateProduct.js","components/admin/OrdersList.js","components/admin/ProcessOrder.js","components/admin/UsersList.js","components/admin/UpdateUser.js","components/admin/ProductReviews.js","components/order/OrderDetails.js","components/admin/CategoryList.js","components/admin/UpdateCategory.js","components/admin/SalesReport.js","App.js","index.js"],"names":["MetaData","title","Helmet","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","ADMIN_PRODUCTS_REQUEST","ADMIN_PRODUCTS_SUCCESS","ADMIN_PRODUCTS_FAIL","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_RESET","NEW_PRODUCT_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_RESET","UPDATE_PRODUCT_FAIL","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_RESET","DELETE_PRODUCT_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_RESET","NEW_REVIEW_FAIL","GET_REVIEWS_REQUEST","GET_REVIEWS_SUCCESS","GET_REVIEWS_FAIL","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_RESET","DELETE_REVIEW_FAIL","CLEAR_ERRORS","getProductDetails","id","dispatch","a","type","axios","get","data","payload","product","response","errorMessage","getAdminProducts","products","getProductReviews","reviews","clearErrors","Product","col","netOfferPercentage","netOfferPrice","offerPercentage","subCategoryOfferPercentage","subCategoryOfferPrice","offerPrice","className","src","images","url","alt","name","to","_id","style","width","ratings","numOfReviews","color","textDecoration","price","fontWeight","Loader","createSliderWithTooltip","Slider","Range","Home","alert","useAlert","useDispatch","useState","currentPage","setCurrentPage","setPrice","category","setCategory","setRatings","params","useParams","useSelector","state","loading","error","productsCount","resPerPage","filteredProductsCount","keyword","useEffect","link","getProducts","count","marks","min","max","defaultValue","tipFormatter","value","tipProps","placement","visible","onChange","map","cursor","listStyleType","onClick","star","activePage","itemsCountPerPage","totalItemscount","pageNumber","console","log","nextPageText","prevPageText","firstPageText","lastPageText","itemClass","linkClass","Footer","Search","setKeyword","navigate","useNavigate","onSubmit","e","preventDefault","trim","placeholder","target","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_RESET","UPDATE_PROFILE_FAIL","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_RESET","UPDATE_PASSWORD_FAIL","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAIL","NEW_PASSWORD_REQUEST","NEW_PASSWORD_SUCCESS","NEW_PASSWORD_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","ALL_USERS_REQUEST","ALL_USERS_SUCCESS","ALL_USERS_FAIL","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_RESET","UPDATE_USER_FAIL","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_RESET","DELETE_USER_FAIL","BLOCK_USER_REQUEST","BLOCK_USER_SUCCESS","BLOCK_USER_RESET","BLOCK_USER_FAIL","BLOCKDATA_REQUEST","BLOCKDATA_SUCCESS","BLOCKDATA_FAIL","loadUser","user","allUsers","users","Header","auth","cartItems","cart","length","avatar","role","success","ADD_TO_CART","REMOVE_CART_ITEM","SAVE_SHIPPING_INFO","addItemToCart","quantity","getState","image","stock","localStorage","setItem","JSON","stringify","ListReviews","class","review","rating","comment","ProductDetails","setQuantity","setRating","setComment","productDetails","newReview","reviewError","offerDetails","subCategoryOfferDetails","Carousel","pause","Item","public_id","document","querySelector","valueAsNumber","qty","readOnly","disabled","description","seller","stars","querySelectorAll","showRatings","forEach","index","starValue","classList","add","remove","addEventListener","tabIndex","reviewData","formData","FormData","set","config","headers","put","Login","email","setEamil","password","setPassword","isAuthenticated","post","login","htmlFor","Register","setUser","setAvatar","upImg","setUpImg","imgRef","useRef","previewCanvasRef","unit","aspect","crop","setCrop","completedCrop","setCompletedCrop","confirm","setConfirm","reader","FileReader","onload","readyState","result","readAsDataURL","files","onLoad","useCallback","img","current","canvas","scaleX","naturalWidth","scaleY","naturalHeight","height","ctx","getContext","pixelRatio","window","devicePixelRatio","setTransform","imageSmoothingQuality","drawImage","x","y","userData","encType","accept","onSelectFile","onImageLoaded","c","onComplete","ref","Math","round","toDataURL","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","FILTER_ORDERS_REQUEST","FILTER_ORDERS_SUCCESS","FILTER_ORDERS_RESET","FILTER_ORDERS_FAIL","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_RESET","UPDATE_ORDER_FAIL","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_RESET","DELETE_ORDER_FAIL","WEEKDATA_REQUEST","WEEKDATA_SUCCESS","WEEKDATA_FAIL","GET_CATEGORIES_REQUEST","GET_CATEGORIES_SUCCESS","GET_CATEGORIES_FAIL","GET_CATEGORY_REQUEST","GET_CATEGORY_SUCCESS","GET_CATEGORY_FAIL","NEW_CATEGORY_REQUEST","NEW_CATEGORY_SUCCESS","NEW_CATEGORY_RESET","NEW_CATEGORY_FAIL","UPDATE_CATEGORY_REQUEST","UPDATE_CATEGORY_SUCCESS","UPDATE_CATEGORY_RESET","UPDATE_CATEGORY_FAIL","DELETE_CATEGORY_REQUEST","DELETE_CATEGORY_SUCCESS","DELETE_CATEGORY_RESET","DELETE_CATEGORY_FAIL","NEW_SUBCATEGORY_REQUEST","NEW_SUBCATEGORY_SUCCESS","NEW_SUBCATEGORY_RESET","NEW_SUBCATEGORY_FAIL","UPDATE_SUBCATEGORY_REQUEST","UPDATE_SUBCATEGORY_SUCCESS","UPDATE_SUBCATEGORY_RESET","UPDATE_SUBCATEGORY_FAIL","DELETE_SUBCATEGORY_REQUEST","DELETE_SUBCATEGORY_SUCCESS","DELETE_SUBCATEGORY_RESET","DELETE_SUBCATEGORY_FAIL","reducer","combineReducers","action","productCount","newProduct","isDeleted","isUpdated","productReviews","userDetails","forgotPassword","message","shippingInfo","item","isItemExist","find","i","filter","newOrder","order","myOrders","orders","allOrders","totalAmount","orderDetails","categories","newCategory","categoryDetails","blockData","blockedCount","weekData","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Profile","String","createdAt","substring","UpdateProfile","setName","setEmail","address","setAddress","addressUpdateId","setAddressUpdateId","avatarPreview","setAvatarPreview","addresses","UpdatePassword","oldPassword","setOldPassword","passwords","ForgotPassword","NewPassword","confirmPassword","setConfirmPassword","token","Cart","removeCartItemHandler","removeItemFromCart","classNamename","newQty","decreaseQty","increaseQty","reduce","acc","Number","toFixed","CheckoutSteps","shipping","confirmOrder","payment","Shipping","countriesList","Object","values","countries","city","setCity","postalCode","setPostalCode","phoneNo","setPhoneNo","country","setCountry","required","createOrder","getOrderDetails","loadScript","Promise","resolve","script","createElement","body","appendChild","onerror","ConfirmOrder","paymentMethod","setPaymentMethod","paymentId","setPaymentId","itemsPrice","shippingPrice","taxPrice","totalPrice","orderItems","razorPaySuccess","paymentInfo","status","options","amount","razorpay_payment_id","Razorpay","open","displayRazorpay","onSuccess","details","paypalSuccessHandler","base","fontSize","invalid","Payment","stripeApiKey","setStripeApiKey","getStripeApiKey","stripe","loadStripe","OrderSuccess","ListOrders","scope","orderStatus","includes","Sidebar","Dashboard","blockDataLoading","salesDataLoading","weekSalesCount","outOfStock","ChartJS","register","ArcElement","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","labels","datasets","label","backgroundColor","doughnutData","borderColor","borderWidth","responsive","plugins","legend","position","ProductsList","deleteError","deleteProductHandler","delete","deleteProduct","getCategories","getCategory","NewProduct","categoryLoading","subCategory","setSubCategory","setDescription","setStock","setSeller","setImages","imagesPreview","setImagesPreview","subCategories","productData","append","rows","Array","from","file","oldArray","multiple","UpdateProduct","updateError","oldImages","setOldImages","setOfferPercentage","setOfferPrice","setOfferDetails","productId","OrdersList","deleteOrderHandler","deleteOrder","ProcessOrder","loggedInUser","setStatus","orderId","isPaid","shippingDetails","updateOrderHandler","orderData","updateOrder","UsersList","blockLoading","deleteUserHandler","deleteUser","blockUserHandler","blockUser","isBlocked","UpdateUser","setRole","userId","for","ProductReviews","setProductId","deleteReviewHandler","deleteReviews","OrderDetails","CategoryList","deleteCategoryHandler","deleteCategory","categoryName","setCategoryName","categoryData","UpdateCategory","createError","subCategoryChange","setSubCategoryChange","subCategoryChangeId","setSubCategoryChangeId","newSubCategoryName","setNewSubCategoryName","categoryId","sub","subId","SalesReport","startDate","setStartDate","endDate","setEndDate","componentRef","React","reactToPrintContent","handlePrint","useReactToPrint","content","documentTitle","removeAfterPrint","App","path","element","timeout","positions","BOTTOM_CENTER","transition","transitions","SCALE","ReactDOM","render","template","AlertTemplate","getElementById"],"mappings":"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","file":"static/js/main.72987718.chunk.js","sourcesContent":["import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst MetaData = ({ title }) => {\n    return (\n        <Helmet>\n            <title>{`${title} - OliveZone`}</title>\n        </Helmet>\n    )\n}\n\nexport default MetaData\n","export const ALL_PRODUCTS_REQUEST = 'ALL_PRODUCTS_REQUEST'\nexport const ALL_PRODUCTS_SUCCESS = 'ALL_PRODUCTS_SUCCESS'\nexport const ALL_PRODUCTS_FAIL = 'ALL_PRODUCTS_FAIL'\n\nexport const ADMIN_PRODUCTS_REQUEST = 'ADMIN_PRODUCTS_REQUEST'\nexport const ADMIN_PRODUCTS_SUCCESS = 'ADMIN_PRODUCTS_SUCCESS'\nexport const ADMIN_PRODUCTS_FAIL = 'ADMIN_PRODUCTS_FAIL'\n\n\nexport const NEW_PRODUCT_REQUEST = 'NEW_PRODUCT_REQUEST'\nexport const NEW_PRODUCT_SUCCESS = 'NEW_PRODUCT_SUCCESS'\nexport const NEW_PRODUCT_RESET = 'NEW_PRODUCT_RESET'\nexport const NEW_PRODUCT_FAIL = 'NEW_PRODUCT_FAIL'\n\nexport const UPDATE_PRODUCT_REQUEST = 'UPDATE_PRODUCT_REQUEST'\nexport const UPDATE_PRODUCT_SUCCESS = 'UPDATE_PRODUCT_SUCCESS'\nexport const UPDATE_PRODUCT_RESET = 'UPDATE_PRODUCT_RESET'\nexport const UPDATE_PRODUCT_FAIL = 'UPDATE_PRODUCT_FAIL'\n\nexport const DELETE_PRODUCT_REQUEST = 'DELETE_PRODUCT_REQUEST'\nexport const DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS'\nexport const DELETE_PRODUCT_RESET = 'DELETE_PRODUCT_RESET'\nexport const DELETE_PRODUCT_FAIL = 'DELETE_PRODUCT_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const NEW_REVIEW_REQUEST = 'NEW_REVIEW_REQUEST'\nexport const NEW_REVIEW_SUCCESS = 'NEW_REVIEW_SUCCESS'\nexport const NEW_REVIEW_RESET = 'NEW_REVIEW_RESET'\nexport const NEW_REVIEW_FAIL = 'NEW_REVIEW_FAIL'\n\nexport const GET_REVIEWS_REQUEST = 'GET_REVIEWS_REQUEST'\nexport const GET_REVIEWS_SUCCESS = 'GET_REVIEWS_SUCCESS'\nexport const GET_REVIEWS_FAIL = 'GET_REVIEWS_FAIL'\n\nexport const DELETE_REVIEW_REQUEST = 'DELETE_REVIEW_REQUEST'\nexport const DELETE_REVIEW_SUCCESS = 'DELETE_REVIEW_SUCCESS'\nexport const DELETE_REVIEW_RESET = 'DELETE_REVIEW_RESET'\nexport const DELETE_REVIEW_FAIL = 'DELETE_REVIEW_FAIL'\n\n\n\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'\n","import axios from 'axios';\n\nimport {\n    ALL_PRODUCTS_REQUEST,\n    ALL_PRODUCTS_SUCCESS,\n    ALL_PRODUCTS_FAIL,\n    ADMIN_PRODUCTS_REQUEST,\n    ADMIN_PRODUCTS_SUCCESS,\n    ADMIN_PRODUCTS_FAIL,\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_SUCCESS,\n    NEW_PRODUCT_FAIL,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_FAIL,\n    GET_REVIEWS_REQUEST,\n    GET_REVIEWS_SUCCESS,\n    GET_REVIEWS_FAIL,\n    DELETE_REVIEW_REQUEST,\n    DELETE_REVIEW_SUCCESS,\n    DELETE_REVIEW_FAIL,\n    CLEAR_ERRORS\n} from '../constants/productConstants'\n\nexport const getProducts = (keyword = '', currentPage = 1, price, category, ratings = 0) => async (dispatch) => {\n    try {\n        dispatch({\n            type: ALL_PRODUCTS_REQUEST\n        })\n\n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${ratings}`\n\n        if(category) {\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${ratings}`\n        }\n\n        const { data } = await axios.get(link);\n\n        dispatch({\n            type: ALL_PRODUCTS_SUCCESS,\n            payload: data\n        })\n\n    }catch(error) {\n       \n        dispatch({\n            type: ALL_PRODUCTS_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\nexport const newProduct = (productData) => async (dispatch) => {\n    try {\n        dispatch({\n            type: NEW_PRODUCT_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(`/api/v1/admin/product/new`, productData, config);\n\n        dispatch({\n            type: NEW_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    }catch(error) {\n       \n        dispatch({\n            type: NEW_PRODUCT_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\nexport const updateProduct = (id, productData) => async (dispatch) => {\n    try {\n        dispatch({\n            type: UPDATE_PRODUCT_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config);\n\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    }catch(error) {\n       \n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\nexport const deleteProduct = (id) => async (dispatch) => {\n    try {\n        dispatch({\n            type: DELETE_PRODUCT_REQUEST\n        })\n\n        const { data } = await axios.delete(`/api/v1/admin/product/${id}`);\n\n        dispatch({\n            type: DELETE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    }catch(error) {\n       \n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({\n            type: PRODUCT_DETAILS_REQUEST\n        })\n\n        const { data } = await axios.get(`/api/v1/product/${id}`);\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data.product\n        })\n\n    }catch(error) {\n       \n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\nexport const newReview = (reviewData) => async (dispatch) => {\n    try {\n        dispatch({\n            type: NEW_REVIEW_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config);\n\n        dispatch({\n            type: NEW_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    }catch(error) {\n       \n        dispatch({\n            type: NEW_REVIEW_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\nexport const getAdminProducts = () => async (dispatch) => {\n    try {\n        dispatch({\n            type: ADMIN_PRODUCTS_REQUEST\n        })\n\n        const { data } = await axios.get(`/api/v1/admin/products`);\n\n        dispatch({\n            type: ADMIN_PRODUCTS_SUCCESS,\n            payload: data.products\n        })\n\n    }catch(error) {\n       \n        dispatch({\n            type: ADMIN_PRODUCTS_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n/* -------------------------------------------------------------------------- */\n/*                         get product reviews(admin)                         */\n/* -------------------------------------------------------------------------- */\nexport const getProductReviews = (id) => async (dispatch) => {\n    try {\n        dispatch({\n            type: GET_REVIEWS_REQUEST\n        })\n\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`);\n\n        dispatch({\n            type: GET_REVIEWS_SUCCESS,\n            payload: data.reviews\n        })\n\n    }catch(error) {\n       \n        dispatch({\n            type: GET_REVIEWS_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n/* -------------------------------------------------------------------------- */\n/*                           delete product reviews                           */\n/* -------------------------------------------------------------------------- */\nexport const deleteReviews = (id, productId) => async (dispatch) => {\n    try {\n        dispatch({\n            type: DELETE_REVIEW_REQUEST\n        })\n\n        const { data } = await axios.delete(`/api/v1/admin/review?id=${id}&productId=${productId}`);\n\n        dispatch({\n            type: DELETE_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    }catch(error) {\n       \n        dispatch({\n            type: DELETE_REVIEW_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n\n\n//clear errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Product = ({ product, col }) => {\n\n    var netOfferPercentage = 0\n    var netOfferPrice = 0\n\n    if (product.offerPercentage <= product.subCategoryOfferPercentage) {\n\n        if (product.subCategoryOfferPercentage !== 0) {\n            netOfferPercentage = product.subCategoryOfferPercentage\n            netOfferPrice = product.subCategoryOfferPrice\n        }else {\n            netOfferPercentage = product.offerPercentage\n            netOfferPrice = product.offerPrice\n        }\n        \n    } else {\n        netOfferPercentage = product.offerPercentage\n        netOfferPrice = product.offerPrice\n    }\n\n    return (\n        <div key={product._id} className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\n            <div className=\"card p-3 rounded\">\n                <img\n                    className=\"card-img-top mx-auto\"\n                    src={product.images[0].url}\n                    alt={product.name}\n                />\n                <div className=\"card-body d-flex flex-column\">\n                    <h5 className=\"card-title\">\n                        <Link to={`/product/${product._id}`}>{product.name}</Link>\n                    </h5>\n                    <div className=\"ratings mt-auto\">\n                        <div className=\"rating-outer\">\n                            <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\n                        </div>\n                        <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\n                    </div>\n                    {netOfferPercentage !== 0 ? (\n                        <Fragment>\n                            <p style={{ color: '#db3725' }}>{netOfferPercentage}% off. Grab the deal now !</p>\n                            <h5 className=\"\" style={{ textDecoration: 'line-through', color: '#9c9ea1' }}>₹ {product.price}</h5>\n                            \n                            <h4 className=\"card-text\" style={{ color: '#3cb807', fontWeight: 'bold' }}>₹ {netOfferPrice}</h4>\n                        </Fragment>\n                    ) : (\n                        <p className=\"card-text\">₹ {product.price}</p>\n\n                    )}\n                    <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Product\n","import React from 'react'\n\nconst Loader = () => {\n    return (\n        <div className=\"loader\">\n            \n        </div>\n    )\n}\n\nexport default Loader\n","import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from './layouts/MetaData'\nimport Pagination from 'react-js-pagination'\nimport Slider, { } from 'rc-slider'\nimport 'rc-slider/assets/index.css';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProducts } from '../actions/productActions';\nimport Product from './product/Product';\nimport Loader from './layouts/Loader';\n\nimport { useAlert } from 'react-alert';\nimport { useParams } from 'react-router-dom';\n\nconst { createSliderWithTooltip } = Slider;\nconst Range = createSliderWithTooltip(Slider.Range)\n\nconst Home = () => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const [currentPage, setCurrentPage] = useState(1);\n    const [price, setPrice] = useState([1, 1000]);\n    const [category, setCategory] = useState('');\n    const [ratings, setRatings] = useState(0);\n\n    const params = useParams();\n\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\n\n    const keyword = params.keyword\n    // console.log(keyword)\n\n    const categories = [\n        'Electronics',\n        'Cameras',\n        'Laptops',\n        'Accessories',\n        'Headphones',\n        'Food',\n        'Books',\n        'Clothes/shoes',\n        'Beauty/health',\n        'Sports',\n        'Outdoor',\n        'Home'\n    ]\n\n    useEffect(() => {\n\n        if (error) {\n            return alert.error(error);\n        }\n\n        dispatch(getProducts(keyword, currentPage, price, category, ratings));\n\n\n\n    }, [dispatch, alert, error, keyword, currentPage, price, category, ratings])\n\n\n    function setCurrentPageNo(pageNumber) {\n        console.log(pageNumber)\n        setCurrentPage(pageNumber);\n    }\n\n    let count = productsCount;\n    if (keyword) {\n        count = filteredProductsCount\n    }\n\n    return (\n        <Fragment >\n\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={\"Best products in the market\"} />\n                    <h1 id=\"products_heading\">Latest Products</h1>\n\n                    <section id=\"products\" className=\"container mt-5\">\n                        <div className=\"row\">\n\n                            {keyword ? (\n                                <Fragment>\n                                    <div className=\"col-6 col-md-3 mt-5 mb-5\">\n                                        <div className=\"ps-5\">\n                                            <Range\n                                                marks={{\n                                                    1: `₹ 1`,\n                                                    1000: `₹ 1000`\n                                                }}\n                                                min={1}\n                                                max={1000}\n                                                defaultValue={[1, 1000]}\n                                                tipFormatter={value => `₹${value}`}\n                                                tipProps={{\n                                                    placement: 'top',\n                                                    visible: true\n                                                }}\n                                                value={price}\n                                                onChange={price => setPrice(price)}\n                                            />\n\n                                            <hr className=\"my-5\" />\n\n                                            <div className=\"mt-5\">\n                                                <h4 className=\"mb-3\">\n                                                    Categories\n                                                </h4>\n\n                                                <ul className=\"ps-0\">\n                                                    {categories.map(category => (\n                                                        <li\n                                                            style={{\n                                                                cursor: 'pointer',\n                                                                listStyleType: 'none'\n                                                            }}\n                                                            key={category}\n                                                            onClick={() => setCategory(category)}\n                                                        >\n                                                            {category}\n                                                        </li>\n                                                    ))}\n                                                </ul>\n                                            </div>\n\n                                            <hr className=\"my-5\" />\n\n                                            <div className=\"mt-5\">\n                                                <h4 className=\"mb-3\">\n                                                    Ratings\n                                                </h4>\n\n                                                <ul className=\"ps-0\">\n                                                    {[5, 4, 3, 2, 1].map(star => (\n                                                        <li\n                                                            style={{\n                                                                cursor: 'pointer',\n                                                                listStyleType: 'none'\n                                                            }}\n                                                            key={star}\n                                                            onClick={() => setRatings(star)}\n                                                        >\n                                                            <div className=\"rating-outer\">\n                                                                <div className=\"rating-inner\"\n                                                                    style={{\n                                                                        width: `${star * 20}%`\n                                                                    }}\n                                                                >\n\n                                                                </div>\n                                                            </div>\n                                                        </li>\n                                                    ))}\n                                                </ul>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col-6 col-md-9\">\n                                        <div className=\"row\">\n                                            {products && products.map(product => (\n                                                <Product key={product._id} product={product} col={4} />\n                                            ))}\n                                        </div>\n                                    </div>\n                                </Fragment>\n                            ) : (\n                                products && products.map(product => (\n                                    <Product key={product._id} product={product} col={3} />\n                                ))\n                            )}\n\n\n\n                        </div>\n                    </section>\n\n                    {resPerPage <= count && (\n                        <div className=\"d-flex justify-content-cetnter mt-5\">\n                            <Pagination\n                                activePage={currentPage}\n                                itemsCountPerPage={resPerPage}\n                                totalItemscount={productsCount}\n                                onChange={setCurrentPageNo}\n                                nextPageText={'Next'}\n                                prevPageText={'Prev'}\n                                firstPageText={'First'}\n                                lastPageText={'Last'}\n                                itemClass=\"page-item\"\n                                linkClass=\"page-link\"\n                            />\n                        </div>\n                    )}\n\n\n                </Fragment>\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default Home\n","import React, { Fragment } from 'react'\n\nconst Footer = () => {\n    return (\n        <Fragment>\n            <footer className=\"py-1\">\n                <p className=\"text-center  mt-1\">\n                    Olive Zone - 2021-2022, All Rights Reserved\n                </p>\n            </footer>\n        </Fragment>\n    )\n}\n\nexport default Footer\n","import React, { useState }from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Search = () => {\n\n    const [keyword, setKeyword] = useState('');\n    const navigate = useNavigate();\n\n    const searchHandler = (e) => {\n        e.preventDefault();\n\n        if(keyword.trim()) {\n            \n            navigate(`/search/${keyword}`)\n\n            setKeyword('')\n        }else {\n            navigate(`/`)\n        }\n\n        \n\n    }\n\n    return (\n        <form onSubmit={searchHandler}>\n            <div className=\"input-group\">\n                <input\n                    type=\"text\"\n                    id=\"search_field\"\n                    className=\"form-control\"\n                    placeholder=\"Enter Product Name ...\"\n                    onChange={(e) => setKeyword(e.target.value)}\n                />\n                <div className=\"input-group-append\">\n                    <button id=\"search_btn\" className=\"btn\">\n                        <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                    </button>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default Search\n","export const LOGIN_REQUEST = 'LOGIN_REQUEST'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\n\nexport const REGISTER_USER_REQUEST = 'REGISTER_USER_REQUEST'\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS'\nexport const REGISTER_USER_FAIL = 'REGISTER_USER_FAIL'\n\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST'\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\nexport const LOAD_USER_FAIL = 'LOAD_USER_FAIL'\n\nexport const UPDATE_PROFILE_REQUEST = 'UPDATE_PROFILE_REQUEST'\nexport const UPDATE_PROFILE_SUCCESS = 'UPDATE_PROFILE_SUCCESS'\nexport const UPDATE_PROFILE_RESET = 'UPDATE_PROFILE_RESET'\nexport const UPDATE_PROFILE_FAIL = 'UPDATE_PROFILE_FAIL'\n\n\nexport const UPDATE_PASSWORD_REQUEST = 'UPDATE_PASSWORD_REQUEST'\nexport const UPDATE_PASSWORD_SUCCESS = 'UPDATE_PASSWORD_SUCCESS'\nexport const UPDATE_PASSWORD_RESET = 'UPDATE_PASSWORD_RESET'\nexport const UPDATE_PASSWORD_FAIL = 'UPDATE_PASSWORD_FAIL'\n\nexport const FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST'\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS'\nexport const FORGOT_PASSWORD_FAIL = 'FORGOT_PASSWORD_FAIL'\n\nexport const NEW_PASSWORD_REQUEST = 'NEW_PASSWORD_REQUEST'\nexport const NEW_PASSWORD_SUCCESS = 'NEW_PASSWORD_SUCCESS'\nexport const NEW_PASSWORD_FAIL = 'NEW_PASSWORD_FAIL'\n\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL'\n\n//admin view all users\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\n\nexport const ALL_USERS_REQUEST = 'ALL_USERS_REQUEST'\nexport const ALL_USERS_SUCCESS = 'ALL_USERS_SUCCESS'\nexport const ALL_USERS_FAIL = 'ALL_USERS_FAIL' \n\nexport const UPDATE_USER_REQUEST = 'UPDATE_USER_REQUEST'\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS'\nexport const UPDATE_USER_RESET = 'UPDATE_USER_RESET'\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL'\n\nexport const DELETE_USER_REQUEST = 'DELETE_USER_REQUEST'\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS'\nexport const DELETE_USER_RESET = 'DELETE_USER_RESET'\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL'\n\nexport const BLOCK_USER_REQUEST = 'BLOCK_USER_REQUEST'\nexport const BLOCK_USER_SUCCESS = 'BLOCK_USER_SUCCESS'\nexport const BLOCK_USER_RESET = 'BLOCK_USER_RESET'\nexport const BLOCK_USER_FAIL = 'BLOCK_USER_FAIL'\n\n//admin graph blocked or unblocked\nexport const BLOCKDATA_REQUEST = 'BLOCKDATA_REQUEST'\nexport const BLOCKDATA_SUCCESS = 'BLOCKDATA_SUCCESS'\nexport const BLOCKDATA_FAIL = 'BLOCKDATA_FAIL' \n\n\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'\n","import axios from 'axios'\nimport {\n    CLEAR_ERRORS,\n    LOGIN_FAIL,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    REGISTER_USER_FAIL,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    LOAD_USER_FAIL,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOGOUT_FAIL,\n    LOGOUT_SUCCESS,\n    UPDATE_PROFILE_FAIL,\n    UPDATE_PROFILE_REQUEST,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_PASSWORD_REQUEST,\n    UPDATE_PASSWORD_SUCCESS,\n    UPDATE_PASSWORD_FAIL,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_FAIL,\n    NEW_PASSWORD_REQUEST,\n    NEW_PASSWORD_SUCCESS,\n    NEW_PASSWORD_FAIL,\n    ALL_USERS_REQUEST,\n    ALL_USERS_SUCCESS,\n    ALL_USERS_FAIL,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    UPDATE_USER_FAIL,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    BLOCK_USER_FAIL,\n    BLOCK_USER_REQUEST,\n    BLOCK_USER_SUCCESS,\n    DELETE_USER_FAIL,\n    DELETE_USER_REQUEST,\n    DELETE_USER_SUCCESS,\n    BLOCKDATA_FAIL,\n    BLOCKDATA_REQUEST,\n    BLOCKDATA_SUCCESS,\n\n} from \"../constants/userConstants\";\n\n\n/* -------------------------------------------------------------------------- */\n/*                                    login                                   */\n/* -------------------------------------------------------------------------- */\nexport const login = (email, password) => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(`/api/v1/login`, { email, password }, config)\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOGIN_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n/* -------------------------------------------------------------------------- */\n/*                                register user                               */\n/* -------------------------------------------------------------------------- */\nexport const register = (userData) => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: REGISTER_USER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n\n        const { data } = await axios.post(`/api/v1/register`, userData, config)\n\n        dispatch({\n            type: REGISTER_USER_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: REGISTER_USER_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n/* -------------------------------------------------------------------------- */\n/*                                  load user                                 */\n/* -------------------------------------------------------------------------- */\nexport const loadUser = () => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: LOAD_USER_REQUEST\n        })\n\n        const { data } = await axios.get(`/api/v1/me`)\n\n        dispatch({\n            type: LOAD_USER_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOAD_USER_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n/* -------------------------------------------------------------------------- */\n/*                               update profile                               */\n/* -------------------------------------------------------------------------- */\nexport const updateProfile = (userData) => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: UPDATE_PROFILE_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/me/update`, userData, config)\n\n        dispatch({\n            type: UPDATE_PROFILE_SUCCESS,\n            payload: data.success\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PROFILE_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n\n/* -------------------------------------------------------------------------- */\n/*                               update password                              */\n/* -------------------------------------------------------------------------- */\nexport const updatePassword = (passwords) => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: UPDATE_PASSWORD_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'appllication/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/password/update`, passwords, config)\n\n        dispatch({\n            type: UPDATE_PASSWORD_SUCCESS,\n            payload: data.success\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PASSWORD_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n/* -------------------------------------------------------------------------- */\n/*                               forgot password                              */\n/* -------------------------------------------------------------------------- */\nexport const forgotPassword = (email) => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: FORGOT_PASSWORD_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'appllication/json'\n            }\n        }\n\n        const { data } = await axios.post(`/api/v1/password/forgot`, email, config)\n\n        dispatch({\n            type: FORGOT_PASSWORD_SUCCESS,\n            payload: data.message\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: FORGOT_PASSWORD_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n\n/* -------------------------------------------------------------------------- */\n/*                               reset password                               */\n/* -------------------------------------------------------------------------- */\n\nexport const resetPassword = (token, passwords) => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: NEW_PASSWORD_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'appllication/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/password/reset/${token}`, passwords, config)\n\n        dispatch({\n            type: NEW_PASSWORD_SUCCESS,\n            payload: data.success\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PASSWORD_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n/* -------------------------------------------------------------------------- */\n/*                                 logout user                                */\n/* -------------------------------------------------------------------------- */\nexport const logout = () => async (dispatch) => {\n    try {\n\n        await axios.get(`/api/v1/logout`)\n\n        dispatch({\n            type: LOGOUT_SUCCESS\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOGOUT_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n/* -------------------------------------------------------------------------- */\n/*                            get all users(admin)                            */\n/* -------------------------------------------------------------------------- */\nexport const allUsers = () => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: ALL_USERS_REQUEST\n        })\n\n        const { data } = await axios.get(`/api/v1/admin/users`)\n\n        dispatch({\n            type: ALL_USERS_SUCCESS,\n            payload: data.users\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_USERS_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n\n/* -------------------------------------------------------------------------- */\n/*                             update user (admin)                            */\n/* -------------------------------------------------------------------------- */\nexport const updateUser = (id, userData) => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: UPDATE_USER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'appllication/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/admin/user/${id}`, userData, config)\n\n        dispatch({\n            type: UPDATE_USER_SUCCESS,\n            payload: data.success\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_USER_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n/* -------------------------------------------------------------------------- */\n/*                           get user details(admin)                          */\n/* -------------------------------------------------------------------------- */\nexport const getUserDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const { data } = await axios.get(`/api/v1/admin/user/${id}`)\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data.user\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n/* -------------------------------------------------------------------------- */\n/*                         block/unblock user (admin)                         */\n/* -------------------------------------------------------------------------- */\nexport const blockUser = (id) => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: BLOCK_USER_REQUEST\n        })\n\n        const { data } = await axios.put(`/api/v1/admin/blockuser/${id}`)\n\n        dispatch({\n            type: BLOCK_USER_SUCCESS,\n            payload: data.success\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: BLOCK_USER_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n\n/* -------------------------------------------------------------------------- */\n/*                             delete user (admin)                            */\n/* -------------------------------------------------------------------------- */\nexport const deleteUser = (id) => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: DELETE_USER_REQUEST\n        })\n\n        const { data } = await axios.delete(`/api/v1/admin/user/${id}`)\n\n        dispatch({\n            type: DELETE_USER_SUCCESS,\n            payload: data.success\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_USER_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n/* -------------------------------------------------------------------------- */\n/*                             block data (admin)                             */\n/* -------------------------------------------------------------------------- */\nexport const blockData = () => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: BLOCKDATA_REQUEST\n        })\n\n        const { data } = await axios.get('/api/v1/admin/blocked')\n\n        dispatch({\n            type: BLOCKDATA_SUCCESS,\n            payload: data.blockedCount\n        })\n\n    } catch (error) {\n        dispatch({\n            type: BLOCKDATA_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n\n\n//clear errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","import React, { Fragment } from 'react'\n\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert'\nimport Search from './Search'\nimport { logout } from '../../actions/userActions'\n\nconst Header = () => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user, loading } = useSelector(state => state.auth)\n    const { cartItems } = useSelector(state => state.cart)\n\n    const logoutHandler = () => {\n        dispatch(logout());\n        alert.success('Logged out successfully')\n    }\n\n    return (\n        <Fragment>\n            <nav className=\"navbar row\">\n                <div className=\"col-12 col-md-3\">\n                    <div className=\"navbar-brand\">\n                        <Link to=\"/\">\n                            <img src=\"/images/logo2.png\" alt='Olive-zone' />\n                        </Link>\n                    </div>\n                </div>\n\n                <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\n                    {/* <Routes>\n                        <Route render={(history) => <Search history={window.history} />} />\n                    </Routes> */}\n                    <Search />\n\n                </div>\n\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\n\n                    <Link to=\"/cart\" style={{ textDecoration: 'none' }} >\n                        <span id=\"cart\" className=\"ms-3\">Cart</span>\n                        <span className=\"ms-1\" id=\"cart_count\">{cartItems.length}</span>\n                    </Link>\n                    {user ? (\n                        <div className=\"ms-4 dropdown d-inline\">\n\n                            <Link to=\"#\" className=\"btn dropdown-toggle text-white\" type=\"button\" id=\"dropDownMenuButton\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" >\n\n                                <figure className=\"avatar avatar-nav\">\n                                    <img src={user.avatar && user.avatar.url} alt={user && user.name} className=\"rounded-circle\" />\n\n                                </figure>\n                                <span>{user && user.name}</span>\n\n                            </Link>\n\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\n\n                                {user && user.role !== 'admin' ? (\n                                   null\n                                ) : (\n                                    <Link className=\"dropdown-item\" to=\"/dashboard\">\n                                        Dashboard\n                                    </Link>\n                                )}\n                                 <Link className=\"dropdown-item\" to=\"/orders/me\">\n                                        Orders\n                                    </Link>\n                                <Link className=\"dropdown-item\" to=\"/me\">\n                                    Profile\n                                </Link>\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\n                                    Logout\n                                </Link>\n\n                            </div>\n\n                        </div>\n                    ) : !loading && <Link to=\"/login\" className=\"btn ms-4\" id=\"login_btn\">Login</Link>}\n\n                </div>\n            </nav>\n        </Fragment>\n    )\n}\n\nexport default Header\n","export const ADD_TO_CART = 'ADD_TO_CART'\n\nexport const REMOVE_CART_ITEM = 'REMOVE_CART_ITEM'\nexport const SAVE_SHIPPING_INFO = 'SAVE_SHIPPING_INFO'\n\n","\nimport axios from 'axios'\nimport {\n    ADD_TO_CART,\n    REMOVE_CART_ITEM,\n    SAVE_SHIPPING_INFO\n} from '../constants/cartConstants'\n\n\nexport const addItemToCart = (id, quantity) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/v1/product/${id}`)\n\n    dispatch({\n        type: ADD_TO_CART,\n        payload: {\n            product: data.product._id,\n            name: data.product.name,\n            price: data.product.price,\n            image: data.product.images[0].url,\n            stock: data.product.stock,\n            quantity\n        }\n    })\n\n    localStorage.setItem(`cartItems`, JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\n\n    dispatch({\n        type: REMOVE_CART_ITEM,\n        payload: id\n    })\n\n    localStorage.setItem(`cartItems`, JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingInfo = (data) => async (dispatch) => {\n\n    dispatch({\n        type: SAVE_SHIPPING_INFO,\n        payload: data\n    })\n\n    localStorage.setItem(`shippingInfo`, JSON.stringify(data))\n}","import React from 'react'\n\nconst ListReviews = ({ reviews }) => {\n    return (\n        <div class=\"reviews w-75\">\n            <h3>Other's Reviews:</h3>\n            <hr />\n            {reviews && reviews.map(review => (\n                <div key={review._id} class=\"review-card my-3\">\n                    <div class=\"rating-outer\">\n                        <div class=\"rating-inner\" style={{ width:`${(review.rating / 5) * 100}%` }}></div>\n                    </div>\n                    <p class=\"review_user\">by {review.name}</p>\n                    \n                    <p class=\"review_comment\">{review.comment}</p>\n\n                    <hr />\n                </div>\n            ))}\n\n        </div>\n    )\n}\n\nexport default ListReviews\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { Carousel } from 'react-bootstrap'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport { getProductDetails, clearErrors, newReview } from '../../actions/productActions'\nimport Loader from '../layouts/Loader'\nimport MetaData from '../layouts/MetaData';\nimport { addItemToCart } from '../../actions/cartActions'\nimport { NEW_REVIEW_RESET } from '../../constants/productConstants'\nimport ListReviews from '../review/ListReviews'\n\n\nconst ProductDetails = () => {\n\n    const [quantity, setQuantity] = useState(1);\n    const [rating, setRating] = useState(0);\n    const [comment, setComment] = useState('');\n\n    const params = useParams();\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { loading, error, product } = useSelector(state => state.productDetails)\n    const { user } = useSelector(state => state.auth)\n    const { error: reviewError, success } = useSelector(state => state.newReview)\n\n    useEffect(() => {\n\n        dispatch(getProductDetails(params.id));\n\n        if (error) {\n            alert.error(error)\n            dispatch(clearErrors());\n        }\n\n        if (reviewError) {\n            alert.error(reviewError)\n            dispatch(clearErrors());\n        }\n\n        if (success) {\n            alert.success('Review added successfully');\n            dispatch({\n                type: NEW_REVIEW_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, reviewError, success, params.id])\n\n    const addToCart = () => {\n        dispatch(addItemToCart(params.id, quantity));\n        alert.success('Item added to cart')\n    }\n\n    const increaseQty = () => {\n        const count = document.querySelector('.count')\n\n        if (count.valueAsNumber >= product.stock) return;\n\n        const qty = count.valueAsNumber + 1;\n        setQuantity(qty);\n    }\n\n    const decreaseQty = () => {\n        const count = document.querySelector('.count')\n\n        if (count.valueAsNumber <= 1) return;\n\n        const qty = count.valueAsNumber - 1;\n        setQuantity(qty);\n    }\n\n    // using vanila javascript\n    function setUserRatings() {\n        const stars = document.querySelectorAll('.star');\n\n        stars.forEach((star, index) => {\n            star.starValue = index + 1;\n\n            ['click', 'mouseover', 'mouseout'].forEach(function (e) {\n                star.addEventListener(e, showRatings);\n            })\n        })\n\n        function showRatings(e) {\n            stars.forEach((star, index) => {\n                if (e.type === 'click') {\n                    if (index < this.starValue) {\n                        star.classList.add('orange');\n\n                        setRating(this.starValue)\n                    } else {\n                        star.classList.remove('orange')\n                    }\n                }\n\n                if (e.type === 'mouseover') {\n                    if (index < this.starValue) {\n                        star.classList.add('yellow')\n                    } else {\n                        star.classList.remove('yellow')\n                    }\n                }\n\n                if (e.type === 'mouseout') {\n                    star.classList.remove('yellow')\n                }\n            })\n        }\n    }\n\n    const reviewHandler = () => {\n        const formData = new FormData();\n\n        formData.set('rating', rating);\n        formData.set('comment', comment);\n        formData.set('productId', params.id);\n\n        dispatch(newReview(formData));\n    }\n\n    var netOfferPercentage = 0\n    var netOfferPrice = 0\n    var offerDetails\n\n    if (product.offerPercentage <= product.subCategoryOfferPercentage) {\n\n        if (product.subCategoryOfferPercentage !== 0) {\n            netOfferPercentage = product.subCategoryOfferPercentage\n            netOfferPrice = product.subCategoryOfferPrice\n            offerDetails = product.subCategoryOfferDetails\n        }else {\n            netOfferPercentage = product.offerPercentage\n            netOfferPrice = product.offerPrice\n            offerDetails = product.offerDetails\n        }\n        \n    } else {\n        netOfferPercentage = product.offerPercentage\n        netOfferPrice = product.offerPrice\n        offerDetails = product.offerDetails\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={product.name} />\n                    <div className=\"row f-flex justify-content-around\">\n                        <div className=\"col-12 col-lg-5 img-fluid\" id=\"product_image\">\n                            <Carousel pause='hover'>\n                                {product.images && product.images.map(image => (\n                                    <Carousel.Item key={image.public_id}>\n                                        <img className=\"d-block w-100 \" src={image.url} alt={product.name} />\n                                    </Carousel.Item>\n                                ))}\n                            </Carousel>\n\n                        </div>\n\n                        <div className=\"col-12 col-lg-5 mt-5\">\n                            <h3>{product.name}</h3>\n                            <p id=\"product_id\">Product # {product._id}</p>\n\n                            <hr />\n\n                            <div className=\"rating-outer\">\n                                <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\n                            </div>\n                            <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\n\n                            <hr />\n\n                            <div className=\"d-flex\">\n                                {netOfferPercentage > 0 ? (\n                                    <Fragment>\n                                        <p className=\"me-2\" id=\"\" style={{textDecoration:'line-through', color:'red'}}>₹ {product.price}</p>\n                                        <h5 className=\"me-3\">With {netOfferPercentage}% off, Buy now at only</h5>\n                                        <p id=\"product_price\" style={{color: 'green'}}>₹ {netOfferPrice}</p>\n                                    </Fragment>\n                                ) : (\n                                    <p id=\"product_price\">₹ {product.price}</p>\n\n                                )}\n                            </div>\n                            {product && <p>{offerDetails}</p>}\n                            <div className=\"stockCounter d-inline\">\n                                <span className=\"btn btn-danger minus\" onClick={decreaseQty}>-</span>\n\n                                <input type=\"number\" className=\"form-control count d-inline\" value={quantity} readOnly />\n\n                                <span className=\"btn btn-primary plus\" onClick={increaseQty}>+</span>\n                            </div>\n                            <button type=\"button\" id=\"cart_btn\" className=\"btn btn-primary d-inline ml-4\" disabled={product.stock <= 0 ? true : false} onClick={addToCart}>Add to Cart</button>\n\n                            <hr />\n\n                            <p>Status: <span id=\"stock_status\" className={product.stock > 0 ? 'greenColor' : 'redColor'}>{product.stock > 0 ? 'In Stock' : 'Out of Stock'}</span></p>\n\n                            <hr />\n\n                            <h4 className=\"mt-2\">Description:</h4>\n                            <p>{product.description}</p>\n                            <hr />\n                            <p id=\"product_seller mb-3\">Sold by: <strong>{product.seller}</strong></p>\n\n                            {user ?\n                                <button id=\"review_btn\" type=\"button\" className=\"btn btn-primary mt-4\"\n                                    data-bs-toggle=\"modal\" data-bs-target=\"#ratingModal\"\n                                    onClick={setUserRatings} >\n                                    Submit Your Review\n                                </button>\n                                :\n                                <div className=\"alert alert-danger mt-5\" type=\"alert\">\n                                    Login to post your review.\n                                </div>\n                            }\n\n                            <div className=\"row mt-2 mb-5\">\n                                <div className=\"rating w-50\">\n\n                                    <div className=\"modal fade\" id=\"ratingModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ratingModalLabel\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header\">\n                                                    <h5 className=\"modal-title\" id=\"ratingModalLabel\">Submit Review</h5>\n                                                    <button type=\"button\" className=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n                                                <div className=\"modal-body\">\n\n                                                    <ul className=\"stars\" >\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                    </ul>\n\n                                                    <textarea name=\"review\" id=\"review\"\n                                                        className=\"form-control mt-3\" value={comment}\n                                                        onChange={(e) => setComment(e.target.value)}>\n\n                                                    </textarea>\n\n                                                    <button className=\"btn my-3 float-right review-btn px-4 text-white\"\n                                                        data-bs-dismiss=\"modal\" aria-label=\"Close\"\n                                                        onClick={reviewHandler}>\n                                                        Submit\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                            </div>\n\n                        </div>\n                    </div>\n\n                    {product.reviews && product.reviews.length > 0 && (\n                        <ListReviews reviews={product.reviews} />\n                    )}\n\n                </Fragment>\n            )}\n        </Fragment>\n\n    )\n}\n\nexport default ProductDetails\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\n\nimport Loader from '../layouts/Loader'\nimport MetaData from '../layouts/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { login, clearErrors } from '../../actions/userActions'\n\nconst Login = () => {\n\n    const [email, setEamil] = useState('');\n    const [password, setPassword] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\n\n    useEffect(() => {\n\n        if (isAuthenticated) {\n            navigate('/')\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n    }, [dispatch, alert, isAuthenticated, error, navigate])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password))\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n\n                    <MetaData title=\"Login\" />\n\n                    <div className=\"row wrapper\">\n                        <div className=\"col-10 col-lg-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                                <h1 className=\"mb-3\">Login</h1>\n                                <div className=\"form-group mb-3\">\n                                    <label htmlFor=\"email_field\">Email</label>\n                                    <input\n                                        type=\"email\"\n                                        id=\"email_field\"\n                                        className=\"form-control\"\n                                        value={email}\n                                        onChange={(e) => setEamil(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group mb-3\">\n                                    <label htmlFor=\"password_field\">Password</label>\n                                    <input\n                                        type=\"password\"\n                                        id=\"password_field\"\n                                        className=\"form-control\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n                                </div>\n\n                                <Link to=\"/password/forgot\" className=\"float-end mb-4\">Forgot Password?</Link>\n\n                                <div className=\"d-grid gap-2 mx-auto\">\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                >\n                                    LOGIN\n                                </button>\n                                </div>\n                                \n\n                                <Link to=\"/register\" className=\"float-end mt-3 mb-3\">New User?</Link>\n                            </form>\n                        </div>\n                    </div>\n\n\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Login\n","import React, { Fragment, useRef, useCallback, useEffect, useState } from 'react'\n\nimport MetaData from '../layouts/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { register, clearErrors } from '../../actions/userActions'\nimport { useNavigate } from 'react-router-dom'\n\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\n\n// function generateDownload(canvas, crop) {\n//     if (!crop || !canvas) {\n//         return;\n//     }\n\n//     const data = canvas.toDataURL();\n\n\n//     console.log(data.split('base64,')[1])\n\n//     canvas.toBlob(\n//         (blob) => {\n//             const previewUrl = window.URL.createObjectURL(blob);\n            \n//             const anchor = document.createElement('a');\n//             anchor.download = 'cropPreview.png';\n//             anchor.href = URL.createObjectURL(blob);\n//             anchor.click();\n\n//             window.URL.revokeObjectURL(previewUrl);\n//         },\n//         'image/png',\n//         1\n//     );\n// }\n\nconst Register = () => {\n\n    const [user, setUser] = useState({\n        name: '',\n        email: '',\n        password: '',\n    });\n\n    const { name, email, password } = user;\n\n    const [avatar, setAvatar] = useState('https://res.cloudinary.com/deb6scajo/image/upload/v1640784817/avatars/sample_dp_luhfir.png');\n\n//  const [avatarPreview, setAvatarPreview] = useState('https://res.cloudinary.com/deb6scajo/image/upload/v1640784817/avatars/sample_dp_luhfir.png');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\n\n    //testing image crop\n\n    const [upImg, setUpImg] = useState();\n    const imgRef = useRef(null);\n    const previewCanvasRef = useRef(null);\n    const [crop, setCrop] = useState({ unit: '%', width: 30, aspect: 1 / 1 });\n    const [completedCrop, setCompletedCrop] = useState(null);\n    const [confirm, setConfirm] = useState(false);\n\n    //testing crop constants end\n\n\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('password', password);\n        formData.set('avatar', avatar);\n\n        dispatch(register(formData))\n    }\n\n    const onChange = (e) => {\n\n\n        if (e.target.name === 'avatar') {\n\n\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    // setAvatarPreview(reader.result)\n                    setAvatar(reader.result)\n                }\n            }\n\n            // console.log(reader.readAsDataURL(e.target.files[0]))\n\n            reader.readAsDataURL(e.target.files[0]);\n\n        } else {\n\n            setUser({\n                ...user,\n                [e.target.name]: e.target.value\n            })\n\n\n        }\n    }\n\n    //image crop test start\n    const onSelectFile = (e) => {\n        if (e.target.files && e.target.files.length > 0) {\n            const reader = new FileReader();\n            reader.addEventListener('load', () => setUpImg(reader.result));\n            reader.readAsDataURL(e.target.files[0]);\n        }\n    };\n\n    const onLoad = useCallback((img) => {\n        imgRef.current = img;\n    }, []);\n\n\n\n    useEffect(() => {\n\n        if (isAuthenticated) {\n            navigate('/')\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        //testing crop start\n        if (!completedCrop || !previewCanvasRef.current || !imgRef.current) {\n            return;\n        }\n\n        const image = imgRef.current;\n        const canvas = previewCanvasRef.current;\n        const crop = completedCrop;\n\n        const scaleX = image.naturalWidth / image.width;\n        const scaleY = image.naturalHeight / image.height;\n        const ctx = canvas.getContext('2d');\n        const pixelRatio = window.devicePixelRatio;\n\n        canvas.width = crop.width * pixelRatio * scaleX;\n        canvas.height = crop.height * pixelRatio * scaleY;\n\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        ctx.imageSmoothingQuality = 'high';\n\n        ctx.drawImage(\n            image,\n            crop.x * scaleX,\n            crop.y * scaleY,\n            crop.width * scaleX,\n            crop.height * scaleY,\n            0,\n            0,\n            crop.width * scaleX,\n            crop.height * scaleY\n        );\n\n        //testing crop end\n\n    }, [dispatch, alert, isAuthenticated, error, navigate, completedCrop])\n\n\n    return (\n        <Fragment>\n\n            <MetaData title={'Register user'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form onSubmit={submitHandler} className=\"shadow-lg\" encType='multipart/form-data'>\n                        <h1 className=\"mb-3\">Register</h1>\n\n                        <div className=\"form-group mb-3\">\n                            <label htmlFor=\"email_field\">Name</label>\n                            <input\n                                type=\"name\"\n                                id=\"name_field\"\n                                className=\"form-control\"\n                                name=\"name\"\n                                value={name}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group mb-3\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name=\"email\"\n                                value={email}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group mb-3\">\n                            <label htmlFor=\"password_field\">Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"password_field\"\n                                className=\"form-control\"\n                                name=\"password\"\n                                value={password}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        {/* testing crop start */}\n                        <Fragment>\n                            <div>\n                                <input type=\"file\" accept=\"image/*\" name=\"avatar\" onChange={(e)=> {onSelectFile(e)}} />\n                            </div>\n                            <ReactCrop\n                                src={upImg}\n                                onImageLoaded={onLoad}\n                                crop={crop}\n                                onChange={(c) => setCrop(c)}\n                                onComplete={(c) => setCompletedCrop(c)}\n                            />\n                            <div>\n                                <canvas\n                                    ref={previewCanvasRef}\n                                    // Rounding is important so the canvas width and height matches/is a multiple for sharpness.\n                                    style={{\n                                        width: Math.round(completedCrop?.width ?? 0),\n                                        height: Math.round(completedCrop?.height ?? 0)\n                                    }}\n                                />\n                            </div>\n                           \n                            <button\n                                type=\"button\"\n                                className={`btn btn-block me-3 py-3 ${confirm ? 'bg-success' : 'bg-warning'}`}\n                                disabled={!completedCrop?.width || !completedCrop?.height}\n                                onClick={() =>\n                                    {\n                                        \n                                        setAvatar(previewCanvasRef.current.toDataURL())\n                                        setConfirm(true)\n                                        // generateDownload(previewCanvasRef.current, completedCrop)\n                                    }\n                                }\n                            >\n                                Confirm crop\n                            </button>\n                        </Fragment>\n                        {/* testing crop end */}\n\n                        <button\n                            id=\"register_button\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                            disabled={confirm && !loading ? false : true}\n                        >\n                            REGISTER\n                        </button>\n                    </form>\n                </div>\n            </div>\n\n\n        </Fragment>\n    )\n}\n\nexport default Register\n","export const CREATE_ORDER_REQUEST = 'CREATE_ORDER_REQUEST'\nexport const CREATE_ORDER_SUCCESS = 'CREATE_ORDER_SUCCESS'\nexport const CREATE_ORDER_FAIL = 'CREATE_ORDER_FAIL'\n\nexport const MY_ORDERS_REQUEST = 'MY_ORDERS_REQUEST'\nexport const MY_ORDERS_SUCCESS = 'MY_ORDERS_SUCCESS'\nexport const MY_ORDERS_FAIL = 'MY_ORDERS_FAIL'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ALL_ORDERS_REQUEST = 'ALL_ORDERS_REQUEST'\nexport const ALL_ORDERS_SUCCESS = 'ALL_ORDERS_SUCCESS'\nexport const ALL_ORDERS_FAIL = 'ALL_ORDERS_FAIL'\n\nexport const FILTER_ORDERS_REQUEST = 'FILTER_ORDERS_REQUEST'\nexport const FILTER_ORDERS_SUCCESS = 'FILTER_ORDERS_SUCCESS'\nexport const FILTER_ORDERS_RESET = 'FILTER_ORDERS_RESET'\nexport const FILTER_ORDERS_FAIL = 'FILTER_ORDERS_FAIL'\n\nexport const UPDATE_ORDER_REQUEST = 'UPDATE_ORDERS_REQUEST'\nexport const UPDATE_ORDER_SUCCESS = 'UPDATE_ORDERS_SUCCESS'\nexport const UPDATE_ORDER_RESET = 'UPDATE_ORDERS_RESET'\nexport const UPDATE_ORDER_FAIL = 'UPDATE_ORDERS_FAIL'\n\nexport const DELETE_ORDER_REQUEST = 'DELETE_ORDERS_REQUEST'\nexport const DELETE_ORDER_SUCCESS = 'DELETE_ORDERS_SUCCESS'\nexport const DELETE_ORDER_RESET = 'DELETE_ORDERS_RESET'\nexport const DELETE_ORDER_FAIL = 'DELETE_ORDERS_FAIL'\n\n//admin graph week sales data\nexport const WEEKDATA_REQUEST = 'WEEKDATA_REQUEST'\nexport const WEEKDATA_SUCCESS = 'WEEKDATA_SUCCESS'\nexport const WEEKDATA_FAIL = 'BLOCKDATA_FAIL' \n\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","export const GET_CATEGORIES_REQUEST = 'GET_CATEGORIES_REQUEST'\nexport const GET_CATEGORIES_SUCCESS = 'GET_CATEGORIES_SUCCESS'\nexport const GET_CATEGORIES_FAIL = 'GET_CATEGORIES_FAIL'\n\nexport const GET_CATEGORY_REQUEST = 'GET_CATEGORY_REQUEST'\nexport const GET_CATEGORY_SUCCESS = 'GET_CATEGORY_SUCCESS'\nexport const GET_CATEGORY_FAIL = 'GET_CATEGORY_FAIL'\n\nexport const NEW_CATEGORY_REQUEST = 'NEW_CATEGORY_REQUEST'\nexport const NEW_CATEGORY_SUCCESS = 'NEW_CATEGORY_SUCCESS'\nexport const NEW_CATEGORY_RESET = 'NEW_CATEGORY_RESET'\nexport const NEW_CATEGORY_FAIL = 'NEW_CATEGORY_FAIL'\n\nexport const UPDATE_CATEGORY_REQUEST = 'UPDATE_CATEGORY_REQUEST'\nexport const UPDATE_CATEGORY_SUCCESS = 'UPDATE_CATEGORY_SUCCESS'\nexport const UPDATE_CATEGORY_RESET = 'UPDATE_CATEGORY_RESET'\nexport const UPDATE_CATEGORY_FAIL = 'UPDATE_CATEGORY_FAIL'\n\nexport const DELETE_CATEGORY_REQUEST = 'DELETE_CATEGORY_REQUEST'\nexport const DELETE_CATEGORY_SUCCESS = 'DELETE_CATEGORY_SUCCESS'\nexport const DELETE_CATEGORY_RESET = 'DELETE_CATEGORY_RESET'\nexport const DELETE_CATEGORY_FAIL = 'DELETE_CATEGORY_FAIL'\n\nexport const NEW_SUBCATEGORY_REQUEST = 'NEW_SUBCATEGORY_REQUEST'\nexport const NEW_SUBCATEGORY_SUCCESS = 'NEW_SUBCATEGORY_SUCCESS'\nexport const NEW_SUBCATEGORY_RESET = 'NEW_SUBCATEGORY_RESET'\nexport const NEW_SUBCATEGORY_FAIL = 'NEW_SUBCATEGORY_FAIL'\n\nexport const UPDATE_SUBCATEGORY_REQUEST = 'UPDATE_SUBCATEGORY_REQUEST'\nexport const UPDATE_SUBCATEGORY_SUCCESS = 'UPDATE_SUBCATEGORY_SUCCESS'\nexport const UPDATE_SUBCATEGORY_RESET = 'UPDATE_SUBCATEGORY_RESET'\nexport const UPDATE_SUBCATEGORY_FAIL = 'UPDATE_SUBCATEGORY_FAIL'\n\nexport const DELETE_SUBCATEGORY_REQUEST = 'DELETE_SUBCATEGORY_REQUEST'\nexport const DELETE_SUBCATEGORY_SUCCESS = 'DELETE_SUBCATEGORY_SUCCESS'\nexport const DELETE_SUBCATEGORY_RESET = 'DELETE_SUBCATEGORY_RESET'\nexport const DELETE_SUBCATEGORY_FAIL = 'DELETE_SUBCATEGORY_FAIL'\n\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { newProductReducer, newReviewReducer, productDetailsReducer, productReducer, productReviewsReducer, productsReducer, reviewReducer } from './reducers/productReducers';\nimport { authReducer, userReducer, forgotPasswordReducer, allUsersReducer, userDetailsReducer, blockDataReducer } from './reducers/userReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { myOrdersReducer, newOrderReducer, orderDetailsReducer, allOrdersReducer, orderReducer, weekDataReducer } from './reducers/orderReducers';\nimport { categoriesReducer, categoryDetailsReducer, newCategoryReducer } from './reducers/categoryReducers';\n\nconst reducer = combineReducers({\n    products: productsReducer,\n    productDetails: productDetailsReducer,\n    newProduct: newProductReducer,\n    product: productReducer,\n    productReviews: productReviewsReducer,\n    review: reviewReducer,\n    auth: authReducer,\n    user: userReducer,\n    allUsers: allUsersReducer,\n    userDetails: userDetailsReducer,\n    forgotPassword: forgotPasswordReducer,\n    cart: cartReducer,\n    newOrder: newOrderReducer,\n    myOrders: myOrdersReducer,\n    allOrders: allOrdersReducer,\n    orderDetails: orderDetailsReducer,\n    order: orderReducer,\n    newReview: newReviewReducer,\n    categories: categoriesReducer,\n    newCategory: newCategoryReducer,\n    categoryDetails: categoryDetailsReducer,\n    blockData: blockDataReducer,\n    weekData: weekDataReducer\n})\n\nlet initialState = {\n    cart: {\n        cartItems: localStorage.getItem(`cartItems`)\n            ? JSON.parse(localStorage.getItem(`cartItems`))\n            : [],\n        shippingInfo: localStorage.getItem(`shippingInfo`)\n            ? JSON.parse(localStorage.getItem(`shippingInfo`))\n            : {}\n    }\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store;","import {\n    ALL_PRODUCTS_REQUEST,\n    ALL_PRODUCTS_SUCCESS,\n    ALL_PRODUCTS_FAIL,\n    ADMIN_PRODUCTS_REQUEST,\n    ADMIN_PRODUCTS_SUCCESS,\n    ADMIN_PRODUCTS_FAIL,\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_SUCCESS,\n    NEW_PRODUCT_RESET,\n    NEW_PRODUCT_FAIL,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_RESET,\n    UPDATE_PRODUCT_FAIL,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_RESET,\n    DELETE_PRODUCT_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_RESET,\n    NEW_REVIEW_FAIL,\n    GET_REVIEWS_REQUEST,\n    GET_REVIEWS_SUCCESS,\n    GET_REVIEWS_FAIL,\n    DELETE_REVIEW_REQUEST,\n    DELETE_REVIEW_SUCCESS,\n    DELETE_REVIEW_RESET,\n    DELETE_REVIEW_FAIL,\n    CLEAR_ERRORS\n} from '../constants/productConstants'\n\nexport const productsReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n\n        case ALL_PRODUCTS_REQUEST:\n        case ADMIN_PRODUCTS_REQUEST:\n            return {\n                loading: true,\n                products: []\n            }\n        case ALL_PRODUCTS_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload.products,\n                productsCount: action.payload.productCount,\n                resPerPage: action.payload.resPerPage,\n                filteredProductsCount: action.payload.filteredProductsCount\n            }\n        case ADMIN_PRODUCTS_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload\n            }\n        case ALL_PRODUCTS_FAIL:\n        case ADMIN_PRODUCTS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n\n        default:\n            return state;\n\n    }\n}\n\nexport const productReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case DELETE_PRODUCT_REQUEST:\n        case UPDATE_PRODUCT_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case DELETE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n        case UPDATE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload\n            }\n        case DELETE_PRODUCT_FAIL:\n        case UPDATE_PRODUCT_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case DELETE_PRODUCT_RESET:\n            return {\n                ...state,\n                isDeleted: false\n            }\n        case UPDATE_PRODUCT_RESET:\n            return {\n                ...state,\n                isUpdated: false\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const productDetailsReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n\n        case PRODUCT_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case PRODUCT_DETAILS_SUCCESS:\n            return {\n\n                loading: false,\n                product: action.payload\n            }\n        case PRODUCT_DETAILS_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const newProductReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n\n        case NEW_PRODUCT_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case NEW_PRODUCT_SUCCESS:\n            return {\n\n                loading: false,\n                success: action.payload.success,\n                product: action.payload.product\n            }\n        case NEW_PRODUCT_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case NEW_PRODUCT_RESET:\n            return {\n                ...state,\n                success: false\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const newReviewReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case NEW_REVIEW_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case NEW_REVIEW_SUCCESS:\n            return {\n\n                loading: false,\n                success: action.payload\n            }\n        case NEW_REVIEW_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case NEW_REVIEW_RESET:\n            return {\n                ...state,\n                success: false\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const productReviewsReducer = (state = {reviews: []}, action) => {\n    switch (action.type) {\n\n        case GET_REVIEWS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case GET_REVIEWS_SUCCESS:\n            return {\n\n                loading: false,\n                reviews: action.payload\n            }\n        case GET_REVIEWS_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const reviewReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case DELETE_REVIEW_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case DELETE_REVIEW_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n        case DELETE_REVIEW_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case DELETE_REVIEW_RESET:\n            return {\n                ...state,\n                isDeleted: false\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}","\nimport {\n    CLEAR_ERRORS,\n    LOGIN_FAIL,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    REGISTER_USER_FAIL,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    LOAD_USER_FAIL,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOGOUT_FAIL,\n    LOGOUT_SUCCESS,\n    UPDATE_PROFILE_FAIL,\n    UPDATE_PROFILE_REQUEST,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_PROFILE_RESET,\n    UPDATE_PASSWORD_FAIL,\n    UPDATE_PASSWORD_REQUEST,\n    UPDATE_PASSWORD_SUCCESS,\n    UPDATE_PASSWORD_RESET,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_FAIL,\n    NEW_PASSWORD_REQUEST,\n    NEW_PASSWORD_SUCCESS,\n    NEW_PASSWORD_FAIL,\n    ALL_USERS_REQUEST,\n    ALL_USERS_SUCCESS,\n    ALL_USERS_FAIL,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    UPDATE_USER_FAIL,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    UPDATE_USER_RESET,\n    BLOCK_USER_FAIL,\n    BLOCK_USER_REQUEST,\n    BLOCK_USER_SUCCESS,\n    BLOCK_USER_RESET,\n    DELETE_USER_FAIL,\n    DELETE_USER_REQUEST,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_RESET,\n    BLOCKDATA_REQUEST,\n    BLOCKDATA_SUCCESS,\n    BLOCKDATA_FAIL,\n} from \"../constants/userConstants\";\n\n\nexport const authReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case LOGIN_REQUEST:\n        case REGISTER_USER_REQUEST:\n        case LOAD_USER_REQUEST:\n            return {\n                loading: true,\n                isAuthenticated: false\n            }\n        case LOGIN_SUCCESS:\n        case REGISTER_USER_SUCCESS:\n        case LOAD_USER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: true,\n                user: action.payload\n            }\n\n        case LOGOUT_SUCCESS:\n            return {\n                loading: false,\n                isAuthenticated: false,\n                user: null\n            }\n\n        case LOGIN_FAIL:\n        case REGISTER_USER_FAIL:\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: false,\n                user: null,\n                error: action.payload\n            }\n        case LOAD_USER_FAIL:\n            return {\n                loading: false,\n                isAuthenticated: false,\n                user: null,\n                error: action.payload\n            }\n\n        case LOGOUT_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n        default:\n            return state\n    }\n}\n\nexport const userReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case UPDATE_PROFILE_REQUEST:\n        case UPDATE_PASSWORD_REQUEST:\n        case UPDATE_USER_REQUEST:\n        case BLOCK_USER_REQUEST:\n        case DELETE_USER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case UPDATE_PROFILE_SUCCESS:\n        case UPDATE_PASSWORD_SUCCESS:\n        case UPDATE_USER_SUCCESS:\n        case BLOCK_USER_SUCCESS:\n\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload\n            }\n        case DELETE_USER_SUCCESS:\n\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n        case UPDATE_PROFILE_RESET:\n        case UPDATE_PASSWORD_RESET:\n        case UPDATE_USER_RESET:\n        case BLOCK_USER_RESET:\n\n            return {\n                ...state,\n                isUpdated: false\n            }\n        case DELETE_USER_RESET:\n\n            return {\n                ...state,\n                isDeleted: false\n            }\n        case UPDATE_PROFILE_FAIL:\n        case UPDATE_PASSWORD_FAIL:\n        case UPDATE_USER_FAIL:\n        case DELETE_USER_FAIL:\n        case BLOCK_USER_FAIL:\n\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const forgotPasswordReducer = (state = {}, action) => {\n    switch (action.type) {\n\n\n        case FORGOT_PASSWORD_REQUEST:\n        case NEW_PASSWORD_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                error: null\n            }\n\n        case FORGOT_PASSWORD_SUCCESS:\n\n            return {\n                ...state,\n                loading: false,\n                message: action.payload\n            }\n\n        case NEW_PASSWORD_SUCCESS:\n            return {\n                ...state,\n                success: action.payload\n            }\n\n        case FORGOT_PASSWORD_FAIL:\n        case NEW_PASSWORD_FAIL:\n\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\n//view all users for admin\nexport const allUsersReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n\n        case ALL_USERS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n\n\n        case ALL_USERS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                users: action.payload\n            }\n\n        case ALL_USERS_FAIL:\n\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n\n        case USER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n\n\n        case USER_DETAILS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                user: action.payload\n            }\n\n        case USER_DETAILS_FAIL:\n\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const blockDataReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case BLOCKDATA_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case BLOCKDATA_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                blockedCount: action.payload\n            }\n\n        case BLOCKDATA_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}","import {\n    ADD_TO_CART,\n    REMOVE_CART_ITEM,\n    SAVE_SHIPPING_INFO\n} from '../constants/cartConstants'\n\nexport const cartReducer = (state = { cartItems: [], shippingInfo: {} }, action) => {\n    switch (action.type) {\n\n        case ADD_TO_CART:\n            const item = action.payload;\n\n            const isItemExist = state.cartItems.find(i => i.product === item.product)\n\n            if (isItemExist) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(i => i.product === isItemExist.product ? item : i)\n                }\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n        \n        case REMOVE_CART_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(i => i.product !== action.payload)\n            }\n        case SAVE_SHIPPING_INFO:\n            return {\n                ...state,\n                shippingInfo: action.payload\n            }\n\n        default:\n            return state\n    }\n}","import {\n    CREATE_ORDER_REQUEST,\n    CREATE_ORDER_SUCCESS,\n    CREATE_ORDER_FAIL,\n    MY_ORDERS_REQUEST,\n    MY_ORDERS_SUCCESS,\n    MY_ORDERS_FAIL,\n    ALL_ORDERS_REQUEST,\n    ALL_ORDERS_SUCCESS,\n    ALL_ORDERS_FAIL,\n    FILTER_ORDERS_REQUEST,\n    FILTER_ORDERS_SUCCESS,\n    FILTER_ORDERS_RESET,\n    FILTER_ORDERS_FAIL,\n    UPDATE_ORDER_REQUEST,\n    UPDATE_ORDER_SUCCESS,\n    UPDATE_ORDER_RESET,\n    UPDATE_ORDER_FAIL,\n    DELETE_ORDER_REQUEST,\n    DELETE_ORDER_SUCCESS,\n    DELETE_ORDER_RESET,\n    DELETE_ORDER_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    WEEKDATA_REQUEST,\n    WEEKDATA_SUCCESS,\n    WEEKDATA_FAIL,\n    CLEAR_ERRORS\n} from '../constants/orderConstants';\n\n\nexport const newOrderReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case CREATE_ORDER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case CREATE_ORDER_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case CREATE_ORDER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const myOrdersReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n\n        case MY_ORDERS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case MY_ORDERS_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case MY_ORDERS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const orderDetailsReducer = (state = { order: {} }, action) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const allOrdersReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ALL_ORDERS_REQUEST:\n        case FILTER_ORDERS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ALL_ORDERS_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload.orders,\n                totalAmount: action.payload.totalAmount\n            }\n\n        case FILTER_ORDERS_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload.orders,\n                success: action.payload.success\n            }\n\n        case FILTER_ORDERS_RESET:\n            return {\n                ...state,\n                success: false\n            }\n\n        case ALL_ORDERS_FAIL:\n        case FILTER_ORDERS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const orderReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case UPDATE_ORDER_REQUEST:\n        case DELETE_ORDER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case UPDATE_ORDER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload\n            }\n        case DELETE_ORDER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n        case UPDATE_ORDER_FAIL:\n        case DELETE_ORDER_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case UPDATE_ORDER_RESET:\n            return {\n                ...state,\n                isUpdated: false\n            }\n        case DELETE_ORDER_RESET:\n            return {\n                ...state,\n                isDeleted: false\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const weekDataReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case WEEKDATA_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case WEEKDATA_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                weekData: action.payload\n            }\n\n        case WEEKDATA_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}","import {\n    GET_CATEGORIES_REQUEST,\n    GET_CATEGORIES_SUCCESS,\n    GET_CATEGORIES_FAIL,\n    GET_CATEGORY_REQUEST,\n    GET_CATEGORY_SUCCESS,\n    GET_CATEGORY_FAIL,\n    NEW_CATEGORY_REQUEST,\n    NEW_CATEGORY_SUCCESS,\n    NEW_CATEGORY_RESET,\n    NEW_CATEGORY_FAIL,\n    UPDATE_CATEGORY_REQUEST,\n    UPDATE_CATEGORY_SUCCESS,\n    UPDATE_CATEGORY_RESET,\n    UPDATE_CATEGORY_FAIL,\n    DELETE_CATEGORY_REQUEST,\n    DELETE_CATEGORY_SUCCESS,\n    DELETE_CATEGORY_RESET,\n    DELETE_CATEGORY_FAIL,\n    NEW_SUBCATEGORY_REQUEST,\n    NEW_SUBCATEGORY_SUCCESS,\n    NEW_SUBCATEGORY_RESET,\n    NEW_SUBCATEGORY_FAIL,\n    UPDATE_SUBCATEGORY_REQUEST,\n    UPDATE_SUBCATEGORY_SUCCESS,\n    UPDATE_SUBCATEGORY_RESET,\n    UPDATE_SUBCATEGORY_FAIL,\n    DELETE_SUBCATEGORY_REQUEST,\n    DELETE_SUBCATEGORY_SUCCESS,\n    DELETE_SUBCATEGORY_RESET,\n    DELETE_SUBCATEGORY_FAIL,\n    CLEAR_ERRORS\n} from '../constants/categoryConstants'\n\n\nexport const categoriesReducer = (state = { categories: [] }, action) => {\n    switch (action.type) {\n\n        case GET_CATEGORIES_REQUEST:\n            return {\n                loading: true,\n                categories: []\n            }\n        case GET_CATEGORIES_SUCCESS:\n            return {\n                loading: false,\n                categories: action.payload\n            }\n        case GET_CATEGORIES_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n\n        default:\n            return state;\n\n    }\n}\n\n\nexport const categoryDetailsReducer = (state = { category: {} }, action) => {\n    switch (action.type) {\n\n        case GET_CATEGORY_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case GET_CATEGORY_SUCCESS:\n            return {\n\n                loading: false,\n                category: action.payload\n            }\n        case GET_CATEGORY_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const newCategoryReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case NEW_CATEGORY_REQUEST:\n        case UPDATE_CATEGORY_REQUEST:\n        case DELETE_CATEGORY_REQUEST:\n        case NEW_SUBCATEGORY_REQUEST:\n        case UPDATE_SUBCATEGORY_REQUEST:\n        case DELETE_SUBCATEGORY_REQUEST:\n\n            return {\n                ...state,\n                loading: true\n            }\n        case NEW_CATEGORY_SUCCESS:\n        case UPDATE_CATEGORY_SUCCESS:\n        case NEW_SUBCATEGORY_SUCCESS:\n        case UPDATE_SUBCATEGORY_SUCCESS:\n\n            return {\n\n                loading: false,\n                success: action.payload.success,\n                category: action.payload.category\n            }\n        case DELETE_CATEGORY_SUCCESS:\n        case DELETE_SUBCATEGORY_SUCCESS:\n            return {\n                loading: false,\n                isDeleted: action.payload.success\n            }\n        case NEW_CATEGORY_FAIL:\n        case UPDATE_CATEGORY_FAIL:\n        case DELETE_CATEGORY_FAIL:\n        case NEW_SUBCATEGORY_FAIL:\n        case UPDATE_SUBCATEGORY_FAIL:\n        case DELETE_SUBCATEGORY_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case NEW_CATEGORY_RESET:\n        case UPDATE_CATEGORY_RESET:\n        case NEW_SUBCATEGORY_RESET:\n        case UPDATE_SUBCATEGORY_RESET:\n\n            return {\n                ...state,\n                success: false\n            }\n        case DELETE_CATEGORY_RESET:\n        case DELETE_SUBCATEGORY_RESET:\n            return {\n                ...state,\n                isDeleted: false\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\n","import React, { Fragment } from 'react'\n\nimport { useSelector } from 'react-redux';\nimport { Link, Navigate } from 'react-router-dom';\nimport Loader from '../layouts/Loader';\nimport MetaData from '../layouts/MetaData';\n\nconst Profile = () => {\n\n    const { user, loading, isAuthenticated } = useSelector(state => state.auth)\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : isAuthenticated ? (\n                <Fragment>\n                    <MetaData title={'My profile'} />\n\n                    <h2 className=\"mt-5 ml-5\">My Profile</h2>\n                    <div className=\"row justify-content-around mt-5 user-info\">\n                        <div className=\"col-12 col-md-3\">\n                            <figure className='avatar avatar-profile'>\n                                <img className=\"rounded-circle img-fluid\" src={user.avatar && user.avatar.url} alt={user.name} />\n                            </figure>\n                            <Link to=\"/me/update\" id=\"edit_profile\" className=\"btn btn-primary btn-block my-5\">\n                                Edit Profile\n                            </Link>\n                        </div>\n\n                        <div className=\"col-12 col-md-5\">\n                            <h4>Full Name</h4>\n                            <p>{user.name}</p>\n\n                            <h4>Email Address</h4>\n                            <p>{user.email}</p>\n\n                            <h4>Joined on</h4>\n                            <p>{String(user.createdAt).substring(0, 10)}</p>\n\n                            {user.role !== 'admin' && (\n                                <Link to=\"/orders/me\" className=\"btn btn-danger btn-block mt-4 me-3\">\n                                My Orders\n                            </Link>\n                            )}\n\n                            <Link to=\"/password/update\" className=\"btn btn-primary btn-block mt-4 me-3\">\n                                Change Password\n                            </Link>\n                        </div>\n                    </div>\n\n                </Fragment>\n            ) : (\n                <Navigate to=\"/login\" />\n            )}\n        </Fragment>\n    )\n}\n\nexport default Profile\n","import React, { Fragment, useEffect, useState } from 'react'\n\nimport MetaData from '../layouts/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\nimport { Navigate, useNavigate } from 'react-router-dom'\nimport { UPDATE_PROFILE_RESET } from \"../../constants/userConstants\";\n\nconst UpdateProfile = () => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [address, setAddress] = useState('')\n    const [addressUpdateId, setAddressUpdateId] = useState('');\n    const [avatar, setAvatar] = useState('');\n\n    //must add a default avatar before production stage\n    const [avatarPreview, setAvatarPreview] = useState('/images/camera.jpg');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const { isAuthenticated, user } = useSelector(state => state.auth);\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n\n        if (isAuthenticated) {\n            setName(user.name);\n            setEmail(user.email);\n            setAvatarPreview(user.avatar.url)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (isUpdated) {\n            alert.success('User updated successfully');\n            dispatch(loadUser());\n\n            navigate('/me')\n\n            dispatch({\n                type: UPDATE_PROFILE_RESET\n            })\n        }\n\n    }, [dispatch, user, alert, isUpdated, isAuthenticated, error, navigate])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('address', address);\n        formData.set('addressUpdateId', addressUpdateId);\n        formData.set('avatar', avatar);\n\n        dispatch(updateProfile(formData))\n    }\n\n    const onChange = (e) => {\n\n\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setAvatarPreview(reader.result)\n                setAvatar(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0]);\n\n\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'Update Profile'} />\n\n            {isAuthenticated ? (\n                <div className=\"row wrapper\">\n                    <div className=\"col-10 col-lg-5\">\n                        <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                            <h1 className=\"mt-2 mb-5\">Update Profile</h1>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email_field\">Name</label>\n                                <input\n                                    type=\"name\"\n                                    id=\"name_field\"\n                                    className=\"form-control\"\n                                    name='name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email_field\">Email</label>\n                                <input\n                                    type=\"email\"\n                                    id=\"email_field\"\n                                    className=\"form-control\"\n                                    name='email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)} />\n                            </div>\n\n                            {user.addresses.length > 0 &&\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"addresses\">Saved Addresses</label>\n                                    <div class=\"list-group\"\n                                        id=\"addresses\">\n\n                                        {user.addresses.map(address => {\n                                            return (\n                                                <button type=\"button\"\n                                                    class=\"list-group-item list-group-item-action\"\n                                                    aria-current=\"true\"\n                                                    onClick={() => {\n                                                        setAddressUpdateId(address._id)\n                                                        setAddress(address.address)\n                                                    }}>\n                                                    {address.address}\n                                                </button>\n                                            )\n                                        })}\n                                    </div>\n                                    {/* <input\n                                        type=\"text\"\n                                        id=\"address_field\"\n                                        className=\"form-control\"\n                                        name='address'\n                                        value={address}\n                                        onChange={(e) => setAddress(e.target.value)}\n                                    /> */}\n                                </div>\n                            }\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"address_field\">Address</label>\n                                <input\n                                    type=\"text\"\n                                    id=\"address_field\"\n                                    className=\"form-control\"\n                                    name='address'                                    \n                                    placeholder={'add new address or click on saved address to edit'}\n                                    value={address}\n                                    onChange={(e) => {setAddress(e.target.value)}}\n                                />\n                            </div>\n\n                            <div className='form-group'>\n                                <label htmlFor='avatar_upload'>Avatar</label>\n                                <div className='d-flex align-items-center'>\n                                    <div>\n                                        <figure className='avatar mr-3 item-rtl'>\n                                            <img\n                                                src={avatarPreview}\n                                                className='rounded-circle'\n                                                alt='Avatar Preview'\n                                            />\n                                        </figure>\n                                    </div>\n                                    <div className='custom-file'>\n                                        <input\n                                            type='file'\n                                            name='avatar'\n                                            className='custom-file-input'\n                                            id='customFile'\n                                            accept='images/*'\n                                            onChange={onChange}\n                                        />\n                                        <label className='custom-file-label' htmlFor='customFile'>\n                                            Choose Avatar\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\"\n                                disabled={loading ? true : false} >Update</button>\n                        </form>\n                    </div>\n                </div>\n            ) : (\n                <Navigate to=\"/login\" />\n            )}\n        </Fragment>\n    )\n}\n\nexport default UpdateProfile\n","import React, { Fragment, useEffect, useState } from 'react'\n\nimport MetaData from '../layouts/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updatePassword, clearErrors } from '../../actions/userActions'\nimport { Navigate, useNavigate } from 'react-router-dom'\nimport { UPDATE_PASSWORD_RESET } from \"../../constants/userConstants\";\n\nconst UpdatePassword = () => {\n\n    const [oldPassword, setOldPassword] = useState('')\n    const [password, setPassword] = useState('')\n\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const { isAuthenticated } = useSelector(state => state.auth);\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (isUpdated) {\n            alert.success('Password updated successfully');\n\n\n            navigate('/me')\n\n            dispatch({\n                type: UPDATE_PASSWORD_RESET\n            })\n        }\n\n    }, [dispatch, alert, isUpdated, isAuthenticated, error, navigate])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('oldPassword', oldPassword);\n        formData.set('password', password);\n\n        dispatch(updatePassword(formData))\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'Change password'} />\n\n            {isAuthenticated ? (\n                <div className=\"row wrapper\">\n                    <div className=\"col-10 col-lg-5\">\n                        <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                            <h1 className=\"mt-2 mb-5\">Update Password</h1>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"old_password_field\">Old Password</label>\n                                <input\n                                    type=\"password\"\n                                    id=\"old_password_field\"\n                                    className=\"form-control\"\n                                    value={oldPassword}\n                                    onChange={(e)=>setOldPassword(e.target.value)}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"new_password_field\">New Password</label>\n                                <input\n                                    type=\"password\"\n                                    id=\"new_password_field\"\n                                    className=\"form-control\"                                    \n                                    value={password}\n                                    onChange={(e)=>setPassword(e.target.value)}\n                                />\n                            </div>\n\n                            <button type=\"submit\" disabled={loading ? true : false} className=\"btn update-btn btn-block mt-4 mb-3\">Update Password</button>\n                        </form>\n                    </div>\n                </div> \n            ) : (\n                <Navigate to=\"/login\" />\n            )}\n        </Fragment>\n    )\n}\n\nexport default UpdatePassword\n","import React, { Fragment, useEffect, useState } from 'react'\n\nimport MetaData from '../layouts/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { forgotPassword, clearErrors } from '../../actions/userActions'\n\nconst ForgotPassword = () => {\n\n\n    const [email, setEmail] = useState('')\n\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, message, loading} = useSelector(state => state.forgotPassword)\n\n    useEffect(() => {\n\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (message) {\n            alert.success(message);\n\n        }\n\n    }, [dispatch, alert, error, message])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('email', email);\n\n        dispatch(forgotPassword(formData))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Forgot password'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-3\">Forgot Password</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Enter Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                value={email}\n                                onChange={(e)=>setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <button\n                            id=\"forgot_password_button\"\n                            type=\"submit\"\n                            disabled={loading ? true : false}\n                            className=\"btn btn-block py-3\">\n                            Send Email\n                        </button>\n\n                    </form>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ForgotPassword\n","import React, { Fragment, useEffect, useState } from 'react'\n\nimport MetaData from '../layouts/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { resetPassword, clearErrors } from '../../actions/userActions'\nimport { useNavigate, useParams } from 'react-router-dom'\n\nconst NewPassword = () => {\n\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n\n\n    const navigate = useNavigate();\n    const params = useParams();\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, success } = useSelector(state => state.forgotPassword)\n\n    useEffect(() => {\n\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (success) {\n            alert.success('Password updated successfully');\n            navigate('/login')\n        }\n\n    }, [dispatch, alert, error, success, navigate])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('password', password);\n        formData.set('confirmPassword', confirmPassword);\n\n        dispatch(resetPassword(params.token, formData))\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'Password Reset'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-3\">New Password</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password_field\">Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"password_field\"\n                                className=\"form-control\"\n                                value={password}\n                                onChange={(e)=>setPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"confirm_password_field\">Confirm Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"confirm_password_field\"\n                                className=\"form-control\"\n                                value={confirmPassword}\n                                onChange={(e)=>setConfirmPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <button\n                            id=\"new_password_button\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\">\n                            Set Password\n                        </button>\n\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default NewPassword\n","import React, { Fragment } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\n\nimport MetaData from '../layouts/MetaData';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions';\n\nconst Cart = () => {\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const { cartItems } = useSelector(state => state.cart);\n\n    const removeCartItemHandler = (id) => {\n        dispatch(removeItemFromCart(id))\n    }\n\n    const increaseQty = (id, quantity, stock) => {\n        const newQty = quantity + 1;\n\n        if(newQty > stock) return;\n\n        dispatch(addItemToCart(id, newQty))\n    }\n\n    const decreaseQty = (id, quantity) => {\n        const newQty = quantity - 1;\n\n        if(newQty <= 0) return;\n\n        dispatch(addItemToCart(id, newQty))\n    }\n\n    const checkoutHandler = () => {\n        navigate('/shipping')\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'Cart'} />\n            {cartItems.length === 0 ? <h2 classNamename=\"mt-5\">your cart is empty</h2> : (\n                <Fragment>\n                    <h2 className=\"mt-5\">Your Cart has : <b>{cartItems.length} items</b></h2>\n\n                    <div className=\"row d-flex justify-content-between\">\n                        <div className=\"col-12 col-lg-8\">\n\n                            {cartItems.map(item => (\n                                <Fragment>\n                                    <hr />\n\n                                    <div className=\"cart-item\" key={item.product}>\n                                        <div className=\"row\">\n                                            <div className=\"col-4 col-lg-3\">\n                                                <img src={item.image} alt={item.name} height=\"90\" width=\"115\" />\n                                            </div>\n\n                                            <div className=\"col-5 col-lg-3\">\n                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                            </div>\n\n\n                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                                <p id=\"card_item_price\">₹{item.price}</p>\n                                            </div>\n\n                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                                <div className=\"stockCounter d-inline\">\n                                                    <span className=\"btn btn-danger minus\" onClick={()=>decreaseQty(item.product, item.quantity)}>-</span>\n                                                    <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\n\n                                                    <span className=\"btn btn-primary plus\" onClick={()=>increaseQty(item.product, item.quantity, item.stock)}>+</span>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\n                                                <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={()=>removeCartItemHandler(item.product)}></i>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </Fragment>\n                            ))}\n\n                            <hr />\n                        </div>\n\n                        <div className=\"col-12 col-lg-3 my-4\">\n                            <div id=\"order_summary\">\n                                <h4>Order Summary</h4>\n                                <hr />\n                                <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\n                                <p>Est. total: <span className=\"order-summary-values\">₹{cartItems.reduce((acc, item) => (acc + item.quantity * item.price), 0).toFixed(2)}</span></p>\n\n                                <hr />\n                                <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\n                            </div>\n                        </div>\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Cart\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst CheckoutSteps = ({ shipping, confirmOrder, payment }) => {\n    return (\n        <div className=\"checkout-progress d-flex justify-content-center mt-5\">\n\n            {shipping ? <Link to={`/shipping`} className=\"float-right\" >\n                <div className='triangle2-active'></div>\n                <div className='step active-step'>Shipping</div>\n                <div className='triangle-active'></div>\n            </Link> : <Link to='#' disabled>\n                <div className='triangle2-incomplete'></div>\n                <div className='step incomplete'>Shipping</div>\n                <div className='triangle-incomplete'></div>\n            </Link>\n            }\n\n            {confirmOrder ? <Link to={`/order/confirm`} className=\"float-right\" >\n                <div className='triangle2-active'></div>\n                <div className='step active-step'>Confirm Order</div>\n                <div className='triangle-active'></div>\n            </Link> : <Link to='#' disabled>\n                <div className='triangle2-incomplete'></div>\n                <div className='step incomplete'>Confirm Order</div>\n                <div className='triangle-incomplete'></div>\n            </Link>\n            }\n\n            {payment ? <Link to={`/payment`} className=\"float-right\" >\n                <div className='triangle2-active'></div>\n                <div className='step active-step'>Payment</div>\n                <div className='triangle-active'></div>\n            </Link> : <Link to='#' disabled>\n                <div className='triangle2-incomplete'></div>\n                <div className='step incomplete'>Payment</div>\n                <div className='triangle-incomplete'></div>\n            </Link>\n            }\n        </div>\n    )\n}\n\nexport default CheckoutSteps\n","import React, { Fragment, useState } from 'react'\nimport { Navigate, useNavigate } from 'react-router-dom'\nimport MetaData from '../layouts/MetaData';\nimport { countries } from 'countries-list'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveShippingInfo } from '../../actions/cartActions';\nimport CheckoutSteps from './CheckoutSteps';\n\nconst Shipping = () => {\n\n    const countriesList = Object.values(countries)\n\n    const { shippingInfo } = useSelector(state => state.cart)\n    const { isAuthenticated } = useSelector(state => state.auth)\n\n    const [address, setAddress] = useState(shippingInfo.address)\n    const [city, setCity] = useState(shippingInfo.city)\n    const [postalCode, setPostalCode] = useState(shippingInfo.postalCode)\n    const [phoneNo, setPhoneNo] = useState(shippingInfo.phoneNo)\n    const [country, setCountry] = useState(shippingInfo.country)\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        dispatch(saveShippingInfo({ address, city, phoneNo, postalCode, country }))\n\n        navigate('/order/confirm')\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Shipping info'} />\n            {isAuthenticated ? (\n                <Fragment>\n\n                    <CheckoutSteps shipping />\n\n                    <div className=\"row wrapper\">\n                        <div className=\"col-10 col-lg-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                                <h1 className=\"mb-4\">Shipping Info</h1>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"address_field\">Address</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"address_field\"\n                                        className=\"form-control\"\n                                        value={address}\n                                        onChange={(e) => setAddress(e.target.value)}\n                                        required\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"city_field\">City</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"city_field\"\n                                        className=\"form-control\"\n                                        value={city}\n                                        onChange={(e) => setCity(e.target.value)}\n                                        required\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"phone_field\">Phone No</label>\n                                    <input\n                                        type=\"phone\"\n                                        id=\"phone_field\"\n                                        className=\"form-control\"\n                                        value={phoneNo}\n                                        onChange={(e) => setPhoneNo(e.target.value)}\n                                        required\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"postal_code_field\">Postal Code</label>\n                                    <input\n                                        type=\"number\"\n                                        id=\"postal_code_field\"\n                                        className=\"form-control\"\n                                        value={postalCode}\n                                        onChange={(e) => setPostalCode(e.target.value)}\n                                        required\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"country_field\">Country</label>\n                                    <select\n                                        id=\"country_field\"\n                                        className=\"form-control\"\n                                        value={country}\n                                        onChange={(e) => setCountry(e.target.value)}\n                                        required\n                                    >\n                                        {countriesList.map(country => (\n                                            <option key={country.name} value={country.name}>\n                                                {country.name}\n                                            </option>\n                                        ))}\n\n                                    </select>\n                                </div>\n\n                                <button\n                                    id=\"shipping_btn\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                >\n                                    CONTINUE\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                </Fragment>\n            ) : (\n                <Navigate to=\"/login\" />\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default Shipping\n","import {\n    CREATE_ORDER_REQUEST,\n    CREATE_ORDER_SUCCESS,\n    CREATE_ORDER_FAIL,\n    MY_ORDERS_REQUEST,\n    MY_ORDERS_SUCCESS,\n    MY_ORDERS_FAIL,\n    ALL_ORDERS_REQUEST,\n    ALL_ORDERS_SUCCESS,\n    ALL_ORDERS_FAIL,\n    FILTER_ORDERS_REQUEST,\n    FILTER_ORDERS_SUCCESS,\n    FILTER_ORDERS_FAIL,\n    UPDATE_ORDER_REQUEST,\n    UPDATE_ORDER_SUCCESS,\n    UPDATE_ORDER_FAIL,\n    DELETE_ORDER_REQUEST,\n    DELETE_ORDER_SUCCESS,\n    DELETE_ORDER_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    CLEAR_ERRORS,\n    WEEKDATA_REQUEST,\n    WEEKDATA_FAIL,\n    WEEKDATA_SUCCESS\n} from '../constants/orderConstants';\nimport axios from 'axios'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: CREATE_ORDER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(`/api/v1/order/new`, order, config)\n\n        dispatch({\n            type: CREATE_ORDER_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CREATE_ORDER_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n/* -------------------------------------------------------------------------- */\n/*                          get logged in user orders                         */\n/* -------------------------------------------------------------------------- */\n\nexport const myOrders = () => async (dispatch) => {\n    try {\n        dispatch({\n            type: MY_ORDERS_REQUEST\n        })\n\n        const { data } = await axios.get('/api/v1/orders/me')\n\n        dispatch({\n            type: MY_ORDERS_SUCCESS,\n            payload: data.orders\n        })\n\n    } catch (error) {\n        dispatch({\n            type: MY_ORDERS_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n/* -------------------------------------------------------------------------- */\n/*                           get user order details                           */\n/* -------------------------------------------------------------------------- */\nexport const getOrderDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        });\n\n        const { data } = await axios.get(`/api/v1/order/${id}`)\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data.order\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n/* -------------------------------------------------------------------------- */\n/*                           get all orders (admin)                           */\n/* -------------------------------------------------------------------------- */\nexport const allOrders = () => async (dispatch) => {\n    try {\n        dispatch({\n            type: ALL_ORDERS_REQUEST\n        });\n\n        const { data } = await axios.get(`/api/v1/admin/orders`)\n\n        dispatch({\n            type: ALL_ORDERS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_ORDERS_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n/* -------------------------------------------------------------------------- */\n/*                             filter orders (admin)                            */\n/* -------------------------------------------------------------------------- */\nexport const filterOrders = (from, to) => async (dispatch) => {\n    try {\n        dispatch({\n            type: FILTER_ORDERS_REQUEST\n        });\n\n        const { data } = await axios.get(`/api/v1/admin/orders/sort?from=${from}&to=${to}`)\n\n        dispatch({\n            type: FILTER_ORDERS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: FILTER_ORDERS_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n\n/* -------------------------------------------------------------------------- */\n/*                            update order (admin)                            */\n/* -------------------------------------------------------------------------- */\nexport const updateOrder = (id, orderData) => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: UPDATE_ORDER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/admin/order/${id}`, orderData, config)\n\n        dispatch({\n            type: UPDATE_ORDER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_ORDER_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n/* -------------------------------------------------------------------------- */\n/*                            delete order (admin)                            */\n/* -------------------------------------------------------------------------- */\nexport const deleteOrder = (id) => async (dispatch) => {\n    try {\n\n        dispatch({\n            type: DELETE_ORDER_REQUEST\n        })\n\n        const { data } = await axios.delete(`/api/v1/admin/order/${id}`)\n\n        dispatch({\n            type: DELETE_ORDER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_ORDER_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\nexport const weekData = () => async (dispatch) => {\n    try {\n        \n        dispatch({\n            type: WEEKDATA_REQUEST\n        })\n\n        const { data } = await axios.get(`/api/v1/admin/orders/lastweek`)\n\n        dispatch({\n            type: WEEKDATA_SUCCESS,\n            payload: data.weekData\n        })\n\n    } catch (error) {\n        dispatch({\n            type: WEEKDATA_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n\n//clear errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","import React, { Fragment, useEffect, useState } from 'react'\nimport { useNavigate, Link, Navigate } from 'react-router-dom'\nimport MetaData from '../layouts/MetaData';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CheckoutSteps from './CheckoutSteps';\nimport { useAlert } from 'react-alert'\n// import PayPal from \"./PayPal\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\n\nimport { createOrder, clearErrors } from '../../actions/orderActions';\nimport axios from 'axios';\n\n\nfunction loadScript(src) {\n    return new Promise((resolve) => {\n        const script = document.createElement('script')\n        script.src = src\n        document.body.appendChild(script)\n\n        script.onload = () => {\n            resolve(true)\n        }\n        script.onerror = () => {\n            resolve(false)\n        }\n\n    })\n}\n\nconst ConfirmOrder = () => {\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { cartItems, shippingInfo } = useSelector(state => state.cart)\n    const { user, isAuthenticated } = useSelector(state => state.auth)\n    const { error } = useSelector(state => state.newOrder);\n\n    const [paymentMethod, setPaymentMethod] = useState('')\n    const [paymentId, setPaymentId] = useState(null);\n    // const [orderId, setOrderId] = useState(null);\n    // const [signature, setSignature] = useState(null);\n\n\n    /* ------------------------- calculate order prices ------------------------- */\n    const itemsPrice = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0)\n    const shippingPrice = itemsPrice > 200 ? 0 : 25\n    const taxPrice = Number((0.05 * itemsPrice).toFixed(2));\n    const totalPrice = Number((itemsPrice + shippingPrice + taxPrice).toFixed(2));\n\n    /* ---------------------- calculate order price finish ---------------------- */\n\n    // const orderInfo = {\n    //     itemsPrice: itemsPrice.toFixed(2),\n    //     shippingPrice,\n    //     taxPrice,\n    //     totalPrice\n    // }\n\n\n    // const paymentData = {\n    //     amount: Math.round(totalPrice * 100)\n    // }\n\n    const order = {\n        orderItems: cartItems,\n        shippingInfo,\n        itemsPrice: itemsPrice.toFixed(2),\n        shippingPrice,\n        taxPrice,\n        totalPrice,\n    }\n\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n\n\n    }, [dispatch, error, alert]);\n\n\n\n    const proceedToPayment = () => {\n\n        if (paymentMethod === 'Razorpay') {\n            displayRazorpay();\n        }\n\n\n        // sessionStorage.setItem('orderInfo', JSON.stringify(orderInfo))\n\n        // navigate('/payment')\n    }\n\n    const cashOnDelivery = () => {\n\n        order.paymentInfo = {\n            id: 'COD',\n            status: 'COD'\n        }\n\n        dispatch(createOrder(order))\n\n        navigate('/success')\n\n    }\n\n    const razorPaySuccess = () => {\n        order.paymentInfo = {\n            id: paymentId,\n            status: 'success'\n        }\n\n        dispatch(createOrder(order))\n\n        navigate('/success')\n    }\n\n    const paypalSuccessHandler = (details, data) => {\n        order.paymentInfo = details.id\n\n        dispatch(createOrder(order))\n\n        navigate('/success')\n\n    }\n\n    async function displayRazorpay() {\n\n        const res = await loadScript('https://checkout.razorpay.com/v1/checkout.js')\n\n        if (!res) {\n            alert.error('Razorpay sdk failed to load. Please try again.')\n            return\n        }\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        // const orderData = {\n        //     amount: totalPrice\n        // }\n        try {\n            var response = await axios.post('/api/v1/razorpay', order, config)\n\n            console.log(response)\n        } catch (error) {\n            console.log(error.response.data.errorMessage)\n        }\n\n\n        // console.log(response)\n\n        if (response) {\n\n            var options = {\n                \"key\": \"rzp_test_toTgvsLqs5fQjG\", // Enter the Key ID generated from the Dashboard\n                \"amount\": response.data.amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\n                \"currency\": \"INR\",\n                \"name\": \"OliveZone\",\n                \"description\": \"Complete payment to place your order\",\n                \"image\": \"/images/logo2.png\",\n                \"order_id\": response.data.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\n                \"handler\": function (response) {\n                    setPaymentId(response.razorpay_payment_id);\n                    // setOrderId(response.razorpay_order_id);\n                    // setSignature(response.razorpay_signature);\n                    razorPaySuccess();\n                    //alert.success(response.razorpay_payment_id);\n                    // alert.success(response.razorpay_order_id);\n                    // alert.success(response.razorpay_signature)\n                },\n                \"prefill\": {\n                    \"name\": user.name,\n                    \"email\": user.email,\n                    \"contact\": shippingInfo.phoneNo\n                },\n                \"notes\": {\n                    \"address\": \"Razorpay Corporate Office\"\n                },\n                \"theme\": {\n                    \"color\": \"#e0a85a\"\n                }\n            };\n            var paymentObject = new window.Razorpay(options);\n            paymentObject.open();\n        } else {\n            alert.error('Something went wrong, please try again')\n        }\n    }\n\n\n\n    return (\n        <Fragment>\n            <MetaData title={'Confirm order'} />\n            {isAuthenticated ? (\n                <Fragment>\n\n                    <CheckoutSteps shipping confirmOrder />\n\n                    <div className=\"row d-flex justify-content-between\">\n                        <div className=\"col-12 col-lg-8 mt-5 order-confirm\">\n\n                            <h4 className=\"mb-3\">Shipping Info</h4>\n                            <p><b>Name:</b>{user && user.name}</p>\n                            <p><b>Phone:</b>{shippingInfo.phoneNo}</p>\n                            <p className=\"mb-4\"><b>Address:</b>{`${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`}</p>\n\n                            <hr />\n                            <h4 className=\"mt-4\">Your Cart Items:</h4>\n\n                            {cartItems.map(item => (\n                                <Fragment>\n                                    <hr />\n                                    <div className=\"cart-item my-1\" key={item.product}>\n                                        <div className=\"row\">\n                                            <div className=\"col-4 col-lg-2\">\n                                                <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\n                                            </div>\n\n                                            <div className=\"col-5 col-lg-6\">\n                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                            </div>\n\n\n                                            <div className=\"col-4 col-lg-4 mt-4 mt-lg-0\">\n                                                <p>{item.quantity} x ₹ {item.price} = <b>₹ {item.quantity * item.price}</b></p>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </Fragment>\n                            ))}\n\n\n                            <hr />\n\n                        </div>\n\n                        <div className=\"col-12 col-lg-3 my-4\">\n                            <div id=\"order_summary\">\n                                <h4>Order Summary</h4>\n                                <hr />\n                                <p>Subtotal:  <span className=\"order-summary-values\">₹ {itemsPrice}</span></p>\n                                <p>Shipping: <span className=\"order-summary-values\">₹ {shippingPrice}</span></p>\n                                <p>Tax:  <span className=\"order-summary-values\">₹ {taxPrice}</span></p>\n\n                                <hr />\n\n                                <p>Total: <span className=\"order-summary-values\">₹ {totalPrice}</span></p>\n\n                                <hr />\n                                <h4>Payment methods</h4>\n                                <hr />\n\n                                <form>\n                                    <div className=\"form-group\">\n                                        <input type=\"radio\" id=\"cash-on-delivery\" name=\"payment-method\" value=\"COD\" onChange={(e) => setPaymentMethod(e.target.value)} />\n                                        <label htmlFor=\"cash-on-delivery\">&nbsp;&nbsp;COD</label>\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <input type=\"radio\" id=\"cash-on-delivery\" name=\"payment-method\" value=\"Razorpay\" onChange={(e) => setPaymentMethod(e.target.value)} />\n                                        <label htmlFor=\"cash-on-delivery\">&nbsp;&nbsp;Razorpay</label>\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <input type=\"radio\" id=\"cash-on-delivery\" name=\"payment-method\" value=\"Paypal\" onChange={(e) => setPaymentMethod(e.target.value)} />\n                                        <label htmlFor=\"cash-on-delivery\">&nbsp;&nbsp;Paypal</label>\n                                    </div>\n\n                                </form>\n                                {paymentMethod && paymentMethod !== 'Paypal' &&\n                                    <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={paymentMethod === 'COD' ? cashOnDelivery : proceedToPayment}>Proceed to {paymentMethod === 'COD' ? 'place order' : 'Razorpay'}</button>\n                                }\n\n                                {paymentMethod && paymentMethod === 'Paypal' &&\n                                    <PayPalButton\n\n                                        amount={totalPrice}\n                                        // shippingPreference=\"NO_SHIPPING\" // default is \"GET_FROM_FILE\"\n                                        onSuccess={(details, data) => {\n                                            console.log(details);\n                                            console.log(data);\n\n                                            //need more work to be done\n\n                                            paypalSuccessHandler(details, data);\n                                            // return instance.post(\"/placeorder\", datas).then((result) => {\n                                            //     if (result) {\n                                            //         swal({\n                                            //             title: \"Order placed successfully!\",\n                                            //             text: `Delivery expect on ${date}`,\n                                            //             icon: \"success\",\n                                            //             button: \"Aww yiss!\",\n                                            //         });\n                                            //     }\n                                            //     navigate('/success')\n                                            // });\n\n                                            //\n                                        }}\n                                    />\n                                }\n\n                            </div>\n                        </div>\n\n\n                    </div>\n                </Fragment>)\n                : (\n                    <Navigate to=\"/login\" />\n                )}\n\n        </Fragment>\n    )\n}\n\nexport default ConfirmOrder\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { Navigate } from 'react-router-dom'\nimport MetaData from '../layouts/MetaData';\n// import { useAlert } from 'react-alert'\n// import { useDispatch, useSelector } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport CheckoutSteps from './CheckoutSteps';\n// import { useStripe, useElements, cardNumberElement, cardExpiryElement, cardCvcElement } from '@stripe/react-stripe-js';\nimport { PaymentElement, CardNumberElement, CardExpiryElement, CardCvcElement } from '@stripe/react-stripe-js';\nimport axios from 'axios'\n\nimport { Elements } from '@stripe/react-stripe-js'\nimport { loadStripe } from '@stripe/stripe-js'\n\n\nconst options = {\n    style: {\n        base: {\n            fontSize: '16px'\n        },\n        invalid: {\n            color: '#9e2146'\n        }\n    }\n}\n\nconst Payment = () => {\n\n    // const navigate = useNavigate();\n    // const alert = useAlert();\n    // const stripe = useStripe();\n    \n    // const Elements = useElements();\n    // const dispatch = useDispatch();\n\n    // const { user, isAuthenticated } = useSelector(state => state.auth);\n    const { isAuthenticated } = useSelector(state => state.auth);\n    // const { cartItems, shippingInfo } = useSelector(state => state.cart)\n    \n    const [stripeApiKey, setStripeApiKey] = useState('')\n\n    useEffect(() => {\n\n        async function getStripeApiKey() {\n            const { data } = await axios.get('/api/v1/stripe/api');\n            setStripeApiKey(data.stripeApiKey)\n          }\n      \n          getStripeApiKey();\n\n    }, [])\n\n    return (\n        <Fragment>\n            <MetaData title={'Payment'} />\n            {isAuthenticated ? (\n                <Elements stripe={loadStripe(stripeApiKey)}>\n                \n    \n            \n                <Fragment>\n\n                    <CheckoutSteps shipping confirmOrder payment />\n\n                    \n\n                    <div className=\"row wrapper\">\n                        <div className=\"col-10 col-lg-5\">\n                            <form className=\"shadow-lg\">\n                                <h1 className=\"mb-4\">Card Info</h1>\n                                <div className=\"form-group\">\n                                    <PaymentElement />\n                                    <label htmlFor=\"card_num_field\">Card Number</label>\n                                    <CardNumberElement\n                                        type=\"text\"\n                                        id=\"card_num_field\"\n                                        className=\"form-control\"\n                                        options={options}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"card_exp_field\">Card Expiry</label>\n                                    <CardExpiryElement\n                                        type=\"text\"\n                                        id=\"card_exp_field\"\n                                        className=\"form-control\"\n                                        options={options}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"card_cvc_field\">Card CVC</label>\n                                    <CardCvcElement\n                                        type=\"text\"\n                                        id=\"card_cvc_field\"\n                                        className=\"form-control\"\n                                        options={options}\n                                    />\n                                </div>\n\n\n                                <button\n                                    id=\"pay_btn\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                >\n                                    Pay\n                                </button>\n\n                            </form>\n                        </div>\n                    </div>\n                </Fragment>\n                </Elements>\n            ) : (\n                <Navigate to=\"/login\" />\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default Payment\n","import React, { Fragment } from 'react'\nimport { useSelector } from 'react-redux';\nimport { Link, Navigate } from 'react-router-dom';\n\nimport MetaData from '../layouts/MetaData';\n\nconst OrderSuccess = () => {\n\n    const { isAuthenticated } = useSelector(state => state.auth)\n\n    return (\n        <Fragment>\n            {isAuthenticated ? (\n                <Fragment>\n                <MetaData title={'Order Success'} />\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-6 mt-5 text-center\">\n                        <img className=\"my-5 img-fluid d-block mx-auto\" src=\"/images/success_image.png\" alt=\"Order Success\" width=\"200\" height=\"200\" />\n    \n                        <h2>Your Order has been placed successfully.</h2>\n    \n                        <Link to=\"/orders/me\">Go to Orders</Link>\n                    </div>\n    \n                </div>\n                </Fragment>\n            ) : (\n                <Navigate to=\"/login\" />\n            )}\n\n\n        </Fragment >\n    )\n}\n\nexport default OrderSuccess\n","import React, { Fragment, useEffect } from 'react'\nimport { Link, Navigate } from 'react-router-dom';\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport MetaData from '../layouts/MetaData';\nimport Loader from '../layouts/Loader'\nimport { myOrders, clearErrors } from '../../actions/orderActions';\n\nconst ListOrders = () => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, orders } = useSelector(state => state.myOrders);\n    const { isAuthenticated } = useSelector(state => state.auth)\n\n\n    useEffect(() => {\n        dispatch(myOrders());\n\n\n\n        if (error) {\n            alert.error(error);\n\n            dispatch(clearErrors())\n        }\n    }, [dispatch, alert, error])\n\n    return (\n        <Fragment>\n            {isAuthenticated ? (\n                <Fragment>\n                    <MetaData title={'My orders'} />\n\n                    <h1 className=\"mt-5\">My orders</h1>\n\n                    {loading ? <Loader /> : (\n                        <table className=\"table table-striped\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">Order ID</th>\n                                    <th scope=\"col\">No of Items</th>\n                                    <th scope=\"col\">Amount</th>\n                                    <th scope=\"col\">Status</th>\n                                    <th scope=\"col\">Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n\n                                {orders && orders.map(order => {\n                                    return (<tr key={order._id}>\n                                        <th scope=\"row\">{order._id}</th>\n                                        <td>{order.orderItems.length}</td>\n                                        <td>{order.totalPrice}</td>\n                                        <td>{order.orderStatus && String(order.orderStatus).includes('Delivered')\n                                            ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\n                                            : <p style={{ color: 'red' }}>{order.orderStatus}</p>}</td>\n                                        <td>{<Link to={`/orders/${order._id}`} className=\"btn btn-primary\" >\n                                            <i className=\"fa fa-eye\"></i>\n                                        </Link>}</td>\n                                    </tr>)\n                                })}\n                            </tbody>\n                        </table>\n\n                    )}\n                </Fragment>\n            ) : (\n                <Navigate to=\"/login\" />\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default ListOrders\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Sidebar = () => {\n    return (\n        <div className=\"sidebar-wrapper\">\n            <nav id=\"sidebar\">\n                <ul className=\"list-unstyled components\">\n                    <li>\n                        <Link to=\"/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link>\n                    </li>\n\n                    <li>\n                        <Link to=\"/admin/salesreport\"><i className=\"fa fa-line-chart\"></i> SalesReport</Link>\n                    </li>\n\n                    <li>\n                        <Link to=\"#productSubmenu\" data-bs-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\"><i\n                            className=\"fa fa-product-hunt\"></i> Products </Link>\n                        <ul className=\"collapse list-unstyled\" id=\"productSubmenu\">\n                            <li>\n                                <Link to=\"/admin/products\"><i className=\"fa fa-list\"></i> All</Link>\n                            </li>\n\n                            <li>\n                                <Link to=\"/admin/product\"><i className=\"fa fa-plus\"></i> Create</Link>\n                            </li>\n                        </ul>\n                    </li>\n\n                    <li>\n                        <Link to=\"#categorySubmenu\" data-bs-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\"><i\n                            className=\"fa fa-sort-amount-asc\"></i> Categories </Link>\n                        <ul className=\"collapse list-unstyled\" id=\"categorySubmenu\">\n                            <li>\n                                <Link to=\"/admin/categories\"><i className=\"fa fa-list\"></i> All</Link>\n                            </li>\n{/* \n                            <li>\n                                <Link to=\"/admin/category\"><i className=\"fa fa-plus\"></i> Create</Link>\n                            </li> */}\n                        </ul>\n                    </li>\n\n                    <li>\n                        <Link to=\"/admin/orders\"><i className=\"fa fa-shopping-bag\"></i> Orders</Link>\n                    </li>\n\n                    <li>\n                        <Link to=\"/admin/users\"><i className=\"fa fa-users\"></i> Users</Link>\n                    </li>\n\n                    <li>\n                        <Link to=\"/admin/reviews\"><i className=\"fa fa-star\"></i> Reviews</Link>\n                    </li>\n\n                </ul>\n            </nav>\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React, { Fragment, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, Navigate } from 'react-router-dom'\nimport {\n    Chart as ChartJS,\n    ArcElement,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Bar, Pie } from 'react-chartjs-2';\n\nimport Sidebar from './Sidebar'\nimport { getAdminProducts } from '../../actions/productActions';\nimport { allOrders, weekData } from '../../actions/orderActions';\nimport { allUsers, blockData } from '../../actions/userActions';\nimport Loader from '../layouts/Loader';\nimport MetaData from '../layouts/MetaData';\n\nconst Dashboard = () => {\n\n    const dispatch = useDispatch();\n\n    const { user, isAuthenticated } = useSelector(state => state.auth);\n    const { products } = useSelector(state => state.products);\n    const { orders, totalAmount, loading } = useSelector(state => state.allOrders);\n    const { loading: blockDataLoading, blockedCount } = useSelector(state => state.blockData)\n    const { loading: salesDataLoading, weekData: weekSalesCount } = useSelector(state => state.weekData)\n    // const { users } = useSelector(state => state.allUsers);\n\n    let outOfStock = 0;\n\n    products && products.forEach(product => {\n        if (product.stock <= 0) {\n            outOfStock += 1;\n        }\n    })\n\n    useEffect(() => {\n        dispatch(getAdminProducts());\n        dispatch(allOrders());\n        dispatch(allUsers());\n        dispatch(blockData());\n        dispatch(weekData())\n\n        // if (allProductsError || allOrdersError || blockedDataError || weekDataError) {\n        //     alert.error('Something wrong try again')\n        // }\n\n    }, [dispatch])\n\n    //graph section starts\n\n\n\n    ChartJS.register(\n        ArcElement,\n        CategoryScale,\n        LinearScale,\n        BarElement,\n        Title,\n        Tooltip,\n        Legend\n    );\n\n    const options = {\n        responsive: true,\n        plugins: {\n            legend: {\n                position: 'top',\n            }\n        },\n    };\n\n    const labels = ['Sunday', 'Monday', 'Tuesday', 'Thursday', 'Friday', 'Saturday'];\n\n    const data = {\n        labels,\n        datasets: [\n            {\n                label: 'Dataset 1',\n                data: weekSalesCount,\n                backgroundColor: 'rgba(255, 99, 132)',\n            }\n        ],\n    };\n\n\n\n    //doughnutData section\n\n    const doughnutData = {\n        labels: ['Blocked', 'Unblocked'],\n        datasets: [\n            {\n                label: 'of Votes',\n                data: blockedCount,\n                backgroundColor: [\n                    'rgb(166, 25, 20)',\n\n                    'rgb(35, 143, 19)'\n                ],\n                borderColor: [\n                    'rgb(35, 143, 19)',\n                    'rgb(166, 25, 20)'\n                ],\n                borderWidth: 1,\n            },\n        ],\n    };\n\n\n    //graph section ends\n\n    return (\n        <Fragment>\n\n            {isAuthenticated && user.role === 'admin' ? (\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-3 col-lg-2\">\n                        <Sidebar />\n                    </div>\n\n                    <div className=\"col-12 col-md-9 col-lg-10\">\n                        <h1 className=\"my-4\">Dashboard</h1>\n\n                        {loading ? <Loader /> : (\n                            <Fragment>\n                                <MetaData title={'Admin Dashboard'} />\n\n                                <div className=\"row pe-4\">\n\n                                    <div className=\"col-xl-3 col-sm-6 mb-3\">\n                                        <div className=\"card text-white bg-primary o-hidden h-100\">\n                                            <div className=\"card-body\">\n                                                <div className=\"text-center card-font-size\">Total Revenue<br /> <b>${totalAmount && totalAmount.toFixed(2)}</b>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col-xl-3 col-sm-6 mb-3\">\n                                        <div className=\"card text-white bg-warning o-hidden h-100\">\n                                            <div className=\"card-body\">\n                                                <div className=\"text-center card-font-size\">Orders<br /> <b>{orders && orders.length}</b></div>\n                                            </div>\n                                            <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/orders\">\n                                                <span className=\"float-left\">View Details</span>\n                                                <span className=\"float-right\">\n                                                    <i className=\"fa fa-angle-right\"></i>\n                                                </span>\n                                            </Link>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col-xl-3 col-sm-6 mb-3\">\n                                        <div className={`card text-white ${outOfStock > 0 ? \"bg-danger\" : \"bg-success\"} o-hidden h-100`}>\n                                            <div className=\"card-body\">\n                                                <div className=\"text-center card-font-size\">Out of Stock<br /> <b>{outOfStock}</b></div>\n                                            </div>\n                                            <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/outOfStock\">\n                                                <span className=\"float-left\">View Details</span>\n                                                <span className=\"float-right\">\n                                                    <i className=\"fa fa-angle-right\"></i>\n                                                </span>\n                                            </Link>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"row pe-4\">\n\n                                    <div className=\"col-sm-8 mb-3\">\n                                        <h1 className=\"my-4\">Last week sales</h1>\n                                        {salesDataLoading ? <Loader /> :\n                                            <Bar options={options} data={data} />\n                                        }\n                                    </div>\n\n                                    <div className=\"col-sm-4 mb-3\" style={{}}>\n                                        <h1 className=\"my-4\">User statuses</h1>\n                                        {blockDataLoading ? <Loader /> :\n                                            <Pie data={doughnutData} />\n                                        }\n                                    </div>\n\n                                </div>\n\n                            </Fragment>\n                        )}\n\n\n                    </div>\n                </div>\n            ) : (\n                <Navigate to=\"/\" />\n            )}\n\n\n\n\n        </Fragment>\n    )\n}\n\nexport default Dashboard\n","import React, { Fragment, useEffect } from 'react'\nimport { Link, Navigate, useNavigate } from 'react-router-dom';\n\nimport MetaData from '../layouts/MetaData';\nimport Loader from '../layouts/Loader';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAdminProducts, clearErrors, deleteProduct } from '../../actions/productActions';\nimport Sidebar from './Sidebar';\nimport { DELETE_PRODUCT_RESET } from '../../constants/productConstants';\n\nconst ProductsList = () => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const { loading, error, products } = useSelector(state => state.products);\n    const { user, isAuthenticated } = useSelector(state => state.auth);\n    const { error: deleteError, isDeleted } = useSelector(state => state.product);\n\n    const deleteProductHandler = (id) => {\n        dispatch(deleteProduct(id))\n    }\n\n\n    useEffect(() => {\n        dispatch(getAdminProducts());\n\n        if (error) {\n            alert.error(error);\n\n            dispatch(clearErrors())\n        }\n\n        if(deleteError) {\n            alert.error(deleteError);\n            dispatch(clearErrors());\n        }\n\n        if(isDeleted) {\n            alert.success('Product deleted successfully');\n            navigate('/admin/products');\n            dispatch({\n                type: DELETE_PRODUCT_RESET\n            })\n        }\n\n\n    }, [dispatch, alert, error, deleteError, isDeleted, navigate])\n\n    return (\n        <Fragment>\n\n            {isAuthenticated && user.role === 'admin' ? (\n                <Fragment>\n\n                    <MetaData title={'All products'} />\n\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-3 col-lg-2\">\n                            <Sidebar />\n                        </div>\n\n                        <div className=\"col-12 col-md-9 col-lg-10\">\n                            <h1 className=\"my-4\">All Products</h1>\n\n                            {loading ? <Loader /> : (\n                                <table className=\"table table-striped\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">ID</th>\n                                            <th scope=\"col\">Name</th>\n                                            <th scope=\"col\">Price</th>\n                                            <th scope=\"col\">Stock</th>\n                                            <th scope=\"col\">Actions</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n\n                                        {products && products.map(product => {\n                                            return (<tr key={product._id}>\n                                                <th scope=\"row\">{product._id}</th>\n                                                <td>{product.name}</td>\n                                                <td>{product.price}</td>\n                                                <td>{product.stock}</td>\n                                                <td>{\n                                                    <Fragment>\n                                                        <Link to={`/admin/product/${product._id}`} className=\"btn btn-primary py-1 px-2\" >\n                                                            <i className=\"fa fa-pencil\"></i>\n                                                        </Link>\n                                                        <button className=\"btn btn-danger py-1 px-2 ms-2\" onClick={() => deleteProductHandler(product._id)} >\n                                                            <i className=\"fa fa-trash\"></i>\n                                                        </button>\n                                                    </Fragment>\n                                                }</td>\n                                            </tr>)\n                                        })}\n                                    </tbody>\n                                </table>\n\n                            )}\n                        </div>\n                    </div>\n\n\n\n                </Fragment>\n            ) : (\n                <Navigate to=\"/\" />\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default ProductsList\n","import axios from 'axios'\nimport {\n    GET_CATEGORIES_REQUEST,\n    GET_CATEGORIES_SUCCESS,\n    GET_CATEGORIES_FAIL,\n    GET_CATEGORY_REQUEST,\n    GET_CATEGORY_SUCCESS,\n    GET_CATEGORY_FAIL,\n    NEW_CATEGORY_REQUEST,\n    NEW_CATEGORY_SUCCESS,\n    NEW_CATEGORY_FAIL,\n    DELETE_CATEGORY_REQUEST,\n    DELETE_CATEGORY_SUCCESS,\n    DELETE_CATEGORY_FAIL,\n    UPDATE_CATEGORY_REQUEST,\n    UPDATE_CATEGORY_SUCCESS,\n    UPDATE_CATEGORY_FAIL,\n    NEW_SUBCATEGORY_REQUEST,\n    NEW_SUBCATEGORY_SUCCESS,\n    NEW_SUBCATEGORY_FAIL,\n    UPDATE_SUBCATEGORY_REQUEST,\n    UPDATE_SUBCATEGORY_SUCCESS,\n    UPDATE_SUBCATEGORY_FAIL,\n    DELETE_SUBCATEGORY_REQUEST,\n    DELETE_SUBCATEGORY_SUCCESS,\n    DELETE_SUBCATEGORY_FAIL,\n    \n    CLEAR_ERRORS,\n} from '../constants/categoryConstants'\n\n\nexport const getCategories = () => async (dispatch) => {\n    try {\n        dispatch({\n            type: GET_CATEGORIES_REQUEST\n        })\n\n        const { data } = await axios.get(`/api/v1/categories`);\n\n        dispatch({\n            type: GET_CATEGORIES_SUCCESS,\n            payload: data.categories\n        })\n\n    }catch(error) {\n       \n        dispatch({\n            type: GET_CATEGORIES_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\nexport const getCategory = (id) => async (dispatch) => {\n    try {\n        dispatch({\n            type: GET_CATEGORY_REQUEST\n        })\n\n        const { data } = await axios.get(`/api/v1/admin/category/${id}`);\n\n        dispatch({\n            type: GET_CATEGORY_SUCCESS,\n            payload: data.category\n        })\n\n    }catch(error) {\n       \n        dispatch({\n            type: GET_CATEGORY_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\nexport const newCategory = (categoryData) => async (dispatch) => {\n    try {\n        dispatch({\n            type: NEW_CATEGORY_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(`/api/v1/admin/category`, categoryData, config);\n\n        dispatch({\n            type: NEW_CATEGORY_SUCCESS,\n            payload: data\n        })\n\n    }catch(error) {\n       \n        dispatch({\n            type: NEW_CATEGORY_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\nexport const updateCategory = (id, name) => async (dispatch) => {\n    try {\n        dispatch({\n            type: UPDATE_CATEGORY_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const categoryData = {\n            name: name\n        }\n\n        const { data } = await axios.put(`/api/v1/admin/category/${id}`, categoryData, config);\n\n        dispatch({\n            type: UPDATE_CATEGORY_SUCCESS,\n            payload: data\n        })\n\n    }catch(error) {\n       \n        dispatch({\n            type: UPDATE_CATEGORY_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\nexport const deleteCategory = (id) => async (dispatch) => {\n    try {\n        dispatch({\n            type: DELETE_CATEGORY_REQUEST\n        })\n\n        const { data } = await axios.delete(`/api/v1/admin/category/${id}`);\n\n        dispatch({\n            type: DELETE_CATEGORY_SUCCESS,\n            payload: data\n        })\n\n    }catch(error) {\n       \n        dispatch({\n            type: DELETE_CATEGORY_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\nexport const newSubCategory = (id,sub) => async (dispatch) => {\n    try {\n        dispatch({\n            type: NEW_SUBCATEGORY_REQUEST\n        })\n\n        const { data } = await axios.post(`/api/v1/admin/category/subcategory?id=${id}&sub=${sub}`);\n\n        dispatch({\n            type: NEW_SUBCATEGORY_SUCCESS,\n            payload: data\n        })\n\n    }catch(error) {\n       \n        dispatch({\n            type: NEW_SUBCATEGORY_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\nexport const updateSubCategory = (categoryData) => async (dispatch) => {\n    try {\n        dispatch({\n            type: UPDATE_SUBCATEGORY_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n\n        const { data } = await axios.put(`/api/v1/admin/category/subcategory`, categoryData, config);\n\n        dispatch({\n            type: UPDATE_SUBCATEGORY_SUCCESS,\n            payload: data\n        })\n\n    }catch(error) {\n       \n        dispatch({\n            type: UPDATE_SUBCATEGORY_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n\nexport const deleteSubCategory = (id,sub) => async (dispatch) => {\n    try {\n        dispatch({\n            type: DELETE_SUBCATEGORY_REQUEST\n        })\n\n        const { data } = await axios.delete(`/api/v1/admin/category/subcategory?id=${id}&sub=${sub}`);\n\n        dispatch({\n            type: DELETE_SUBCATEGORY_SUCCESS,\n            payload: data\n        })\n\n    }catch(error) {\n       \n        dispatch({\n            type: DELETE_SUBCATEGORY_FAIL,\n            payload: error.response.data.errorMessage\n        })\n    }\n}\n\n\n//clear errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","import React, { Fragment, useEffect, useState } from 'react'\nimport { useNavigate, Navigate } from 'react-router-dom';\n\nimport MetaData from '../layouts/MetaData';\nimport Loader from '../layouts/Loader';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { newProduct, clearErrors } from '../../actions/productActions';\nimport Sidebar from './Sidebar';\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants';\nimport { getCategories } from '../../actions/categoryActions';\n\nconst NewProduct = () => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const { loading, error, success } = useSelector(state => state.newProduct);\n    const { user, isAuthenticated } = useSelector(state => state.auth)\n    const { loading: categoryLoading, categories } = useSelector(state => state.categories);\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n    const [category, setCategory] = useState('');\n    const [subCategory, setSubCategory] = useState('');\n    const [description, setDescription] = useState('');\n    const [stock, setStock] = useState(0);\n    const [seller, setSeller] = useState('');\n    const [images, setImages] = useState([]);\n    const [imagesPreview, setImagesPreview] = useState([]);\n\n    // const categories = [\n    //     'Electronics',\n    //     'Cameras',\n    //     'Laptops',\n    //     'Accessories',\n    //     'Headphones',\n    //     'Food',\n    //     'Books',\n    //     'Clothes/shoes',\n    //     'Beauty/health',\n    //     'Sports',\n    //     'Outdoor',\n    //     'Home'\n    // ]\n\n\n\n\n    useEffect(() => {\n\n        dispatch(getCategories());\n\n        if (error) {\n            alert.error(error);\n\n            dispatch(clearErrors())\n        }\n\n        if (success) {\n            navigate('/admin/products');\n            alert.success('product created successfully');\n            dispatch({\n                type: NEW_PRODUCT_RESET\n            })\n        }\n    }, [dispatch, alert, error, success, navigate])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('price', price);\n        formData.set('description', description);\n        formData.set('category', category);\n        formData.set('subCategory', subCategory);\n        formData.set('stock', stock);\n        formData.set('seller', seller);\n\n        images.forEach(image => {\n            formData.append('images', image)\n        })\n\n        dispatch(newProduct(formData))\n    }\n\n    const onChange = (e) => {\n\n        const files = Array.from(e.target.files)\n\n        setImagesPreview([]);\n        setImages([])\n\n        files.forEach(file => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\n                    setImages(oldArray => [...oldArray, reader.result])\n\n                }\n            }\n\n            reader.readAsDataURL(file);\n        })\n\n\n\n\n    }\n\n    var subCategories\n    categories && category && categories.filter((c )=> {\n        if(c.name === category) {\n            subCategories = c.subCategories\n            return null\n        }else return null\n    })\n\n\n\n    return (\n        <Fragment>\n\n            {isAuthenticated && user.role === 'admin' ? (\n                <Fragment>\n\n                    <MetaData title={'New products'} />\n\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-3 col-lg-2\">\n                            <Sidebar />\n                        </div>\n\n                        <div className=\"col-12 col-md-9 col-lg-10\">\n                            {categoryLoading ? <Loader /> : (\n                                <Fragment>\n                                    <div className=\"wrapper my-5\">\n                                        <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                            <h1 className=\"mb-4\">New Product</h1>\n\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"name_field\">Name</label>\n                                                <input\n                                                    type=\"text\"\n                                                    id=\"name_field\"\n                                                    className=\"form-control\"\n                                                    value={name}\n                                                    onChange={(e) => setName(e.target.value)}\n                                                />\n                                            </div>\n\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"price_field\">Price</label>\n                                                <input\n                                                    type=\"text\"\n                                                    id=\"price_field\"\n                                                    className=\"form-control\"\n                                                    value={price}\n                                                    onChange={(e) => setPrice(e.target.value)}\n                                                />\n                                            </div>\n\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"description_field\">Description</label>\n                                                <textarea\n                                                    className=\"form-control\"\n                                                    id=\"description_field\"\n                                                    rows=\"8\"\n                                                    value={description}\n                                                    onChange={(e) => setDescription(e.target.value)}>\n\n                                                </textarea>\n                                            </div>\n\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"category_field\">Category</label>\n                                                <select className=\"form-control\"\n                                                    id=\"category_field\"\n                                                    value={category}\n                                                    onChange={(e) => setCategory(e.target.value)}>\n                                                    <option value='' >Select Category</option>\n                                                    {categories && categories.map(category => (\n                                                        <option key={category._id} value={category.name} >{category.name}</option>\n                                                    ))}\n                                                </select>\n                                            </div>\n                                            \n                                            {category &&\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"category_field\">Sub Category</label>\n                                                    <select className=\"form-control\"\n                                                        id=\"category_field\"\n                                                        value={subCategory}\n                                                        onChange={(e) => setSubCategory(e.target.value)}>\n                                                        <option value='' >Select sub Category</option>\n                                                        {subCategories && subCategories.map(subCategory => (\n                                                            <option key={subCategory._id} value={subCategory.name} >{subCategory.name}</option>\n                                                        ))}\n                                                    </select>\n                                                </div>\n                                            }\n\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"stock_field\">Stock</label>\n                                                <input\n                                                    type=\"number\"\n                                                    id=\"stock_field\"\n                                                    className=\"form-control\"\n                                                    value={stock}\n                                                    onChange={(e) => setStock(e.target.value)}\n                                                />\n                                            </div>\n\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"seller_field\">Seller Name</label>\n                                                <input\n                                                    type=\"text\"\n                                                    id=\"seller_field\"\n                                                    className=\"form-control\"\n                                                    value={seller}\n                                                    onChange={(e) => setSeller(e.target.value)}\n                                                />\n                                            </div>\n\n                                            <div className='form-group'>\n                                                <label>Images</label>\n\n                                                <div className='custom-file'>\n                                                    <input\n                                                        type='file'\n                                                        name='product_images'\n                                                        className='custom-file-input'\n                                                        id='customFile'\n                                                        onChange={onChange}\n                                                        multiple\n                                                    />\n                                                    <label className='custom-file-label' htmlFor='customFile'>\n                                                        Choose Images\n                                                    </label>\n                                                </div>\n\n                                                {imagesPreview.map(img => (\n                                                    <img src={img} key={img} alt=\"Images preview\" className='mt-3 me-2' width=\"55\" height=\"52\" />\n                                                ))}\n\n                                            </div>\n\n\n                                            <button\n                                                id=\"login_button\"\n                                                type=\"submit\"\n                                                className=\"btn btn-block py-3\"\n                                                disabled={loading ? true : false}\n                                            >\n                                                CREATE\n                                            </button>\n\n                                        </form>\n                                    </div>\n                                </Fragment>\n                            )}\n                        </div>\n                    </div>\n\n\n\n                </Fragment>\n            ) : (\n                <Navigate to=\"/\" />\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default NewProduct\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { Navigate, useNavigate, useParams } from 'react-router-dom';\n\nimport MetaData from '../layouts/MetaData';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateProduct, getProductDetails, clearErrors } from '../../actions/productActions';\nimport Sidebar from './Sidebar';\nimport { UPDATE_PRODUCT_RESET } from '../../constants/productConstants';\nimport Loader from '../layouts/Loader';\nimport { getCategories } from '../../actions/categoryActions';\n\nconst UpdateProduct = () => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const params = useParams();\n\n    const { error, product } = useSelector(state => state.productDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.product);\n    const { user, isAuthenticated } = useSelector(state => state.auth)\n    const { loading: categoryLoading, categories } = useSelector(state => state.categories);\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n    const [category, setCategory] = useState('');\n    const [subCategory, setSubCategory] = useState('');\n    const [description, setDescription] = useState('');\n    const [stock, setStock] = useState(0);\n    const [seller, setSeller] = useState('');\n    const [images, setImages] = useState([]);\n    const [oldImages, setOldImages] = useState([]);\n    const [imagesPreview, setImagesPreview] = useState([]);\n\n    //offer section\n    const [offerPercentage, setOfferPercentage] = useState(0);\n    const [offerPrice, setOfferPrice] = useState(0);\n    const [offerDetails, setOfferDetails] = useState('');\n\n    const productId = params.id;\n\n    // const categories = [\n    //     'Electronics',\n    //     'Cameras',\n    //     'Laptops',\n    //     'Accessories',\n    //     'Headphones',\n    //     'Food',\n    //     'Books',\n    //     'Clothes/shoes',\n    //     'Beauty/health',\n    //     'Sports',\n    //     'Outdoor',\n    //     'Home'\n    // ]\n\n    var subCategories\n    categories && category && categories.filter((c )=> {\n        if(c.name === category) {\n            subCategories = c.subCategories\n            return null\n        }else return null\n    })\n\n\n    useEffect(() => {\n\n        dispatch(getCategories());\n\n        if (product && product._id !== productId) {\n            dispatch(getProductDetails(productId))\n        } else {\n            setName(product.name);\n            setPrice(product.price);\n            setDescription(product.description);\n            setCategory(product.category);\n            setSubCategory(product.subCategory);\n            setStock(product.stock);\n            setSeller(product.seller);\n            setOldImages(product.images);\n            setOfferPercentage(product.offerPercentage);\n            setOfferDetails(product.offerDetails);\n            setOfferPrice(product.offerPrice);\n        }\n\n        if (error) {\n            alert.error(error);\n\n            dispatch(clearErrors());\n        }\n\n        if (updateError) {\n            alert.error(updateError);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            navigate('/admin/products');\n            alert.success('product updated successfully');\n            dispatch(getProductDetails(productId))\n\n            dispatch({\n\n                type: UPDATE_PRODUCT_RESET\n            })\n        }\n    }, [dispatch, alert, error, isUpdated, navigate, updateError, product, productId])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('price', price);\n        formData.set('description', description);\n        formData.set('category', category);\n        formData.set('subCategory', subCategory);\n        formData.set('stock', stock);\n        formData.set('seller', seller);\n        formData.set('offerPercentage', offerPercentage);\n        formData.set('offerDetails', offerDetails);\n        formData.set('offerPrice', offerPrice);\n\n        images.forEach(image => {\n            formData.append('images', image)\n        })\n\n        dispatch(updateProduct(product._id, formData))\n\n    }\n\n    const onChange = (e) => {\n\n        const files = Array.from(e.target.files)\n\n        setImagesPreview([]);\n        setImages([])\n        setOldImages([])\n\n        files.forEach(file => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\n                    setImages(oldArray => [...oldArray, reader.result])\n\n                }\n            }\n\n            reader.readAsDataURL(file);\n        })\n\n\n\n\n    }\n\n    //calculating offer price\n\n    const calculateOfferPrice = () => {\n        setOfferPrice((product.price - (offerPercentage * product.price / 100)).toFixed(2));\n    }\n\n\n    return (\n        <Fragment>\n\n            {isAuthenticated && user.role === 'admin' ? (\n                <Fragment>\n\n                    <MetaData title={'Update products'} />\n\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-3 col-lg-2\">\n                            <Sidebar />\n                        </div>\n\n                        <div className=\"col-12 col-md-9 col-lg-10\">\n                            {categoryLoading ? <Loader /> : (\n                                <Fragment>\n                                    <div className=\"wrapper my-5\">\n                                        <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                            <h1 className=\"mb-4\">Update Product</h1>\n\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"name_field\">Name</label>\n                                                <input\n                                                    type=\"text\"\n                                                    id=\"name_field\"\n                                                    className=\"form-control\"\n                                                    value={name}\n                                                    onChange={(e) => setName(e.target.value)}\n                                                />\n                                            </div>\n\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"price_field\">Price</label>\n                                                <input\n                                                    type=\"text\"\n                                                    id=\"price_field\"\n                                                    className=\"form-control\"\n                                                    value={price}\n                                                    onChange={(e) => setPrice(e.target.value)}\n                                                />\n                                            </div>\n\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"description_field\">Description</label>\n                                                <textarea\n                                                    className=\"form-control\"\n                                                    id=\"description_field\"\n                                                    rows=\"8\"\n                                                    value={description}\n                                                    onChange={(e) => setDescription(e.target.value)}>\n\n                                                </textarea>\n                                            </div>\n\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"category_field\">Category</label>\n                                                <select className=\"form-control\"\n                                                    id=\"category_field\"\n                                                    value={category}\n                                                    onChange={(e) => setCategory(e.target.value)}>\n                                                    <option value='' >Select Category</option>\n                                                    {categories && categories.map(category => (\n                                                        <option key={category._id} value={category.name} >{category.name}</option>\n                                                    ))}\n                                                </select>\n                                            </div>\n                                            \n                                            {category &&\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"category_field\">Sub Category</label>\n                                                    <select className=\"form-control\"\n                                                        id=\"category_field\"\n                                                        value={subCategory}\n                                                        onChange={(e) => setSubCategory(e.target.value)}>\n                                                        <option value='' >Select sub Category</option>\n                                                        {subCategories && subCategories.map(subCategory => (\n                                                            <option key={subCategory._id} value={subCategory.name} >{subCategory.name}</option>\n                                                        ))}\n                                                    </select>\n                                                </div>\n                                            }\n                                            \n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"stock_field\">Stock</label>\n                                                <input\n                                                    type=\"number\"\n                                                    id=\"stock_field\"\n                                                    className=\"form-control\"\n                                                    value={stock}\n                                                    onChange={(e) => setStock(e.target.value)}\n                                                />\n                                            </div>\n\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"stock_field\">Offer Percentage</label>\n                                                <input\n                                                    type=\"number\"\n                                                    id=\"stock_field\"\n                                                    className=\"form-control\"\n                                                    value={offerPercentage}\n                                                    onChange={(e) => {\n                                                        setOfferPercentage(e.target.value)\n                                                        calculateOfferPrice()\n                                                    }}\n                                                />\n                                                {offerPrice && <p>effective product price : {offerPrice}</p>}\n                                            </div>\n\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"seller_field\">Offer Details</label>\n                                                <input\n                                                    type=\"text\"\n                                                    id=\"seller_field\"\n                                                    className=\"form-control\"\n                                                    value={offerDetails}\n                                                    onChange={(e) => setOfferDetails(e.target.value)}\n                                                />\n                                            </div>\n\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"seller_field\">Seller Name</label>\n                                                <input\n                                                    type=\"text\"\n                                                    id=\"seller_field\"\n                                                    className=\"form-control\"\n                                                    value={seller}\n                                                    onChange={(e) => setSeller(e.target.value)}\n                                                />\n                                            </div>\n\n                                            <div className='form-group'>\n                                                <label>Images</label>\n\n                                                <div className='custom-file'>\n                                                    <input\n                                                        type='file'\n                                                        name='product_images'\n                                                        className='custom-file-input'\n                                                        id='customFile'\n                                                        onChange={onChange}\n                                                        multiple\n                                                    />\n                                                    <label className='custom-file-label' htmlFor='customFile'>\n                                                        Choose Images\n                                                    </label>\n                                                </div>\n\n                                                {oldImages && oldImages.map(img => (\n                                                    <img className='mt-3 me-2' src={img.url} alt={img.url} key={img} width=\"55\" height=\"52\" />\n                                                ))}\n\n                                                {imagesPreview.map(img => (\n                                                    <img src={img} key={img} alt=\"Images preview\" className='mt-3 me-2' width=\"55\" height=\"52\" />\n                                                ))}\n\n                                            </div>\n\n\n                                            <button\n                                                id=\"login_button\"\n                                                type=\"submit\"\n                                                className=\"btn btn-block py-3\"\n                                                disabled={loading ? true : false}\n                                            >\n                                                UPDATE\n                                            </button>\n\n                                        </form>\n                                    </div>\n                                </Fragment>\n                            )}\n                        </div>\n                    </div>\n\n\n\n                </Fragment>\n            ) : (\n                <Navigate to=\"/\" />\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default UpdateProduct\n","import React, { Fragment, useEffect } from 'react'\nimport { Link, Navigate, useNavigate } from 'react-router-dom';\n\nimport MetaData from '../layouts/MetaData';\nimport Loader from '../layouts/Loader';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { allOrders, clearErrors, deleteOrder } from '../../actions/orderActions';\nimport Sidebar from './Sidebar';\nimport { DELETE_ORDER_RESET } from '../../constants/orderConstants';\n\nconst OrdersList = () => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const { loading, error, orders } = useSelector(state => state.allOrders);\n    const { user, isAuthenticated } = useSelector(state => state.auth);\n    const { isDeleted } = useSelector(state => state.order);\n\n    const deleteOrderHandler = (id) => {\n        dispatch(deleteOrder(id))\n    }\n\n\n    useEffect(() => {\n        dispatch(allOrders());\n\n        if (error) {\n            alert.error(error);\n\n            dispatch(clearErrors())\n        }\n\n        if(isDeleted) {\n            alert.success('Order deleted successfully');\n            navigate('/admin/orders');\n            dispatch({\n                type: DELETE_ORDER_RESET\n            })\n        }\n\n\n    }, [dispatch, alert, error, isDeleted, navigate])\n\n    return (\n        <Fragment>\n\n            {isAuthenticated && user.role === 'admin' ? (\n                <Fragment>\n\n                    <MetaData title={'All orders'} />\n\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-3 col-lg-2\">\n                            <Sidebar />\n                        </div>\n\n                        <div className=\"col-12 col-md-9 col-lg-10\">\n                            <h1 className=\"my-4\">All Orders</h1>\n\n                            {loading ? <Loader /> : (\n                                <table className=\"table table-striped\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">Order ID</th>\n                                            <th scope=\"col\">Number of Items</th>\n                                            <th scope=\"col\">Amount</th>\n                                            <th scope=\"col\">Status</th>\n                                            <th scope=\"col\">Actions</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n\n                                        {orders && orders.map(order => {\n                                            return (<tr key={order._id}>\n                                                <th scope=\"row\">{order._id}</th>\n                                                <td>{order.orderItems.length}</td>\n                                                <td>{order.totalPrice}</td>\n                                                <td>{order.orderStatus && String(order.orderStatus).includes('Delivered')\n                                                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\n                                                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>}</td>\n                                                <td>{\n                                                    <Fragment>\n                                                        <Link to={`/admin/order/${order._id}`} className=\"btn btn-primary py-1 px-2\" >\n                                                            <i className=\"fa fa-eye\"></i>\n                                                        </Link>\n                                                        <button className=\"btn btn-danger py-1 px-2 ms-2\" onClick={()=>{deleteOrderHandler(order._id)}} >\n                                                            <i className=\"fa fa-trash\"></i>\n                                                        </button>\n                                                    </Fragment>\n                                                }</td>\n                                            </tr>)\n                                        })}\n                                    </tbody>\n                                </table>\n\n                            )}\n                        </div>\n                    </div>\n\n\n\n                </Fragment>\n            ) : (\n                <Navigate to=\"/\" />\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default OrdersList\n","import React, { Fragment, useState, useEffect } from 'react'\nimport { Link, Navigate, useParams } from 'react-router-dom';\n\nimport MetaData from '../layouts/MetaData';\nimport Loader from '../layouts/Loader';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getOrderDetails, updateOrder, clearErrors } from '../../actions/orderActions';\nimport Sidebar from './Sidebar';\nimport { UPDATE_ORDER_RESET } from '../../constants/orderConstants';\n\n\nconst ProcessOrder = () => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const params = useParams();\n\n    const { loading, order={} } = useSelector(state => state.orderDetails)\n    \n    const { error, isUpdated } = useSelector(state => state.order);\n    const { user: loggedInUser, isAuthenticated } = useSelector(state => state.auth)\n\n    const [status, setStatus] = useState('Processing');\n\n    const orderId = params.id;\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order;\n\n    let isPaid = false;\n\n    if(paymentInfo) {\n        if(paymentInfo.status === 'COD' || paymentInfo.status === 'success') {\n            isPaid = true;\n        } else {\n            isPaid = false;\n        }\n    }\n\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`;\n\n    useEffect(() => {\n\n        dispatch(getOrderDetails(orderId));\n\n        if (error) {\n            alert.error(error);\n\n            dispatch(clearErrors());\n        }\n\n\n        if (isUpdated) {\n            alert.success('Order updated successfully');\n            dispatch({\n                type: UPDATE_ORDER_RESET\n            })\n        }\n    }, [dispatch, alert, error, isUpdated, orderId])\n\n\n    const updateOrderHandler = (id) => {\n\n        const formData = new FormData();\n        formData.set('status', status);\n\n\n        dispatch(updateOrder(id, formData))\n\n    }\n\n   \n\n    return (\n        <Fragment>\n\n            {isAuthenticated && loggedInUser.role === 'admin' ? (\n                <Fragment>\n\n                    <MetaData title={`Process order # ${order && order._id}`} />\n\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-3 col-lg-2\">\n                            <Sidebar />\n                        </div>\n\n                        <div className=\"col-12 col-md-9 col-lg-10\">\n                            <Fragment>\n\n                                {loading ? <Loader /> : (\n                                    <div className=\"row d-flex justify-content-around\">\n                                        <div className=\"col-12 col-lg-7 order-details\">\n\n                                            <h2 className=\"my-5\">Order # {order && order._id}</h2>\n\n                                            <h4 className=\"mb-4\">Shipping Info</h4>\n                                            <p><b>Name:</b> {user && user.name}</p>\n                                            <p><b>Phone:</b>{shippingInfo && shippingInfo.phoneNo}</p>\n                                            <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\n                                            <p><b>Amount:</b> ${totalPrice}</p>\n\n                                            <hr />\n\n                                            <h4 className=\"my-4\">Payment</h4>\n                                            <p className={isPaid ? \"greenColor\" : \"redColor\"} ><b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b></p>\n\n                                            <h4 className=\"my-4\">Payment Info</h4>\n                                            <p className={isPaid ? \"greenColor\" : \"redColor\"} ><b>{paymentInfo ? paymentInfo.status : null}</b></p>\n\n                                            <h4 className=\"my-4\">Order Status:</h4>\n                                            <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? 'greenColor' : 'redColor'}><b>{orderStatus}</b></p>\n\n\n                                            <h4 className=\"my-4\">Order Items:</h4>\n\n                                            <hr />\n                                            <div className=\"cart-item my-1\">\n                                                {orderItems && orderItems.map(item => (\n                                                    <div key={item.product} className=\"row my-5\">\n                                                        <div className=\"col-4 col-lg-2\">\n                                                            <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\n                                                        </div>\n\n                                                        <div className=\"col-5 col-lg-5\">\n                                                            <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                                        </div>\n\n\n                                                        <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                                            <p>${item.price}</p>\n                                                        </div>\n\n                                                        <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                                            <p>{item.quantity} Piece(s)</p>\n                                                        </div>\n                                                    </div>\n                                                ))}\n\n                                            </div>\n                                            <hr />\n                                        </div>\n\n                                        <div className=\"col-12 col-lg-3 mt-5\">\n                                            <h4 className=\"my-4\">Status</h4>\n\n                                            <div className=\"form-group\">\n                                                <select\n                                                    className=\"form-control\"\n                                                    name='status'\n                                                    value={status}\n                                                    onChange={(e) => setStatus(e.target.value)}\n                                                >\n                                                    <option value=\"Processing\">Processing</option>\n                                                    <option value=\"Shipped\">Shipped</option>\n                                                    <option value=\"Delivered\">Delivered</option>\n                                                </select>\n                                            </div>\n\n                                            <button className=\"btn btn-primary btn-block\" onClick={() => updateOrderHandler(order._id)}>\n                                                Update Status\n                                            </button>\n                                        </div>\n\n                                    </div>\n                                )}\n\n                            </Fragment>\n                        </div>\n                    </div>\n\n\n\n                </Fragment>\n            ) : (\n                <Navigate to=\"/\" />\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default ProcessOrder\n","import React, { Fragment, useEffect } from 'react'\nimport { Link, Navigate, useNavigate } from 'react-router-dom';\n\nimport MetaData from '../layouts/MetaData';\nimport Loader from '../layouts/Loader';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { allUsers, clearErrors, deleteUser, blockUser } from '../../actions/userActions';\nimport Sidebar from './Sidebar';\nimport { DELETE_USER_RESET, BLOCK_USER_RESET } from '../../constants/userConstants';\n\n\nfunction UsersList() {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const { loading, error, users } = useSelector(state => state.allUsers);\n    const { user, isAuthenticated } = useSelector(state => state.auth);\n    const { isDeleted, isUpdated, loading: blockLoading } = useSelector(state => state.user);\n\n    const deleteUserHandler = (id) => {\n        dispatch(deleteUser(id))\n    }\n\n    const blockUserHandler = (id) => {\n        dispatch(blockUser(id))\n    }\n\n\n    useEffect(() => {\n        dispatch(allUsers());\n\n        if (error) {\n            alert.error(error);\n\n            dispatch(clearErrors())\n        }\n\n        if (isUpdated) {\n            alert.success('User updated successfully');\n            dispatch(allUsers());\n            dispatch({\n                type: BLOCK_USER_RESET\n            })\n        }\n\n        if (isDeleted) {\n            alert.success('User deleted successfully');\n            dispatch(allUsers());\n            dispatch({\n                type: DELETE_USER_RESET\n            })\n        }\n\n\n    }, [dispatch, alert, error, isDeleted, isUpdated, navigate])\n\n    return (\n        <Fragment>\n\n            {isAuthenticated && user.role === 'admin' ? (\n                <Fragment>\n\n                    <MetaData title={'All usres'} />\n\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-3 col-lg-2\">\n                            <Sidebar />\n                        </div>\n\n                        <div className=\"col-12 col-md-9 col-lg-10\">\n                            <h1 className=\"my-4\">All Users</h1>\n\n                            {loading ? <Loader /> : (\n                                <div className=\"table-responsive\">\n                                    <table className=\"table table-striped table-hover\">\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\">Name</th>\n                                                <th scope=\"col\">Image</th>\n                                                <th scope=\"col\">Email</th>\n                                                <th scope=\"col\">Role</th>\n                                                <th scope=\"col\">Block/Unblock</th>\n                                                <th scope=\"col\">Actions</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n\n                                            {users && users.map(user => {\n                                                return (<tr key={user._id}>\n                                                    <th scope=\"row\">{user.name}</th>\n                                                    <td>\n                                                        <img src={user.avatar.url} alt={user.name} width={50} height={52} ></img>\n                                                    </td>\n                                                    <td>{user.email}</td>\n                                                    <td>{user.role}</td>\n                                                    <td>\n                                                        <button disabled={blockLoading ? true : false}className={`btn ${user.isBlocked ? 'btn-success' : 'btn-danger'} py-1 px-2 ms-2`} onClick={() => blockUserHandler(user._id)}>\n                                                            {user.isBlocked ? \"Unblock\" : \"Block\"}\n                                                        </button>\n                                                    </td>\n                                                    <td>{\n                                                        <Fragment>\n                                                            <Link to={`/admin/user/${user._id}`} className=\"btn btn-primary py-1 px-2\" >\n                                                                <i className=\"fa fa-pencil\"></i>\n                                                            </Link>\n                                                            <button className=\"btn btn-danger py-1 px-2 ms-2\" onClick={() => deleteUserHandler(user._id)}>\n                                                                <i className=\"fa fa-trash\"></i>\n                                                            </button>\n\n                                                        </Fragment>\n                                                    }</td>\n                                                </tr>)\n                                            })}\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                            )}\n                        </div>\n                    </div>\n\n\n\n                </Fragment>\n            ) : (\n                <Navigate to=\"/\" />\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default UsersList\n","import React, { Fragment, useEffect, useState } from 'react'\n\nimport MetaData from '../layouts/MetaData'\nimport Sidebar from './Sidebar';\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateUser, getUserDetails, clearErrors } from '../../actions/userActions'\nimport { Navigate, useNavigate, useParams } from 'react-router-dom'\nimport { UPDATE_USER_RESET } from \"../../constants/userConstants\";\n\nfunction UpdateUser() {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [role, setRole] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const params = useParams();\n\n    const { isAuthenticated, user: loggedInUser } = useSelector(state => state.auth);\n    const { error, isUpdated } = useSelector(state => state.user);\n    const { user } = useSelector(state => state.userDetails);\n\n    const userId = params.id;\n\n    useEffect(() => {\n\n\n        if (user && user._id !== userId) {\n            dispatch(getUserDetails(userId));\n        } else {\n            setName(user.name);\n            setEmail(user.email);\n            setRole(user.role);\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (isUpdated) {\n            alert.success('User updated successfully');\n\n            navigate('/admin/users')\n\n            dispatch({\n                type: UPDATE_USER_RESET\n            })\n        }\n\n    }, [dispatch, user, userId, alert, isUpdated, isAuthenticated, error, navigate])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n\n        formData.set('role', role);\n\n        dispatch(updateUser(user._id, formData))\n    }\n\n    return (\n        <Fragment>\n\n            {isAuthenticated && loggedInUser.role === 'admin' ? (\n                <Fragment>\n\n                    <MetaData title={`Update user`} />\n\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-3 col-lg-2\">\n                            <Sidebar />\n                        </div>\n\n                        <div className=\"col-12 col-md-9 col-lg-10\">\n                            <div className=\"row wrapper\">\n                                <div className=\"col-10 col-lg-5\">\n                                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                                        <h1 className=\"mt-2 mb-5\">Update User</h1>\n\n                                        <div className=\"form-group\">\n                                            <label for=\"name_field\">Name</label>\n                                            <input\n                                                type=\"name\"\n                                                id=\"name_field\"\n                                                className=\"form-control\"\n                                                name='name'\n                                                value={name}\n                                                onChange={(e) => setName(e.target.value)}\n                                            />\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <label for=\"email_field\">Email</label>\n                                            <input\n                                                type=\"email\"\n                                                id=\"email_field\"\n                                                className=\"form-control\"\n                                                name='email'\n                                                value={email}\n                                                onChange={(e) => setEmail(e.target.value)}\n                                            />\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <label for=\"role_field\">Role</label>\n\n                                            <select\n                                                id=\"role_field\"\n                                                className=\"form-control\"\n                                                name='role'\n                                                value={role}\n                                                onChange={(e) => setRole(e.target.value)}\n                                            >\n                                                <option value=\"user\">user</option>\n                                                <option value=\"admin\">admin</option>\n                                            </select>\n                                        </div>\n\n                                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" >Update</button>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n\n                </Fragment>\n            ) : (\n                <Navigate to=\"/\" />\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default UpdateUser\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { Navigate, useNavigate } from 'react-router-dom';\n\nimport MetaData from '../layouts/MetaData';\nimport Sidebar from './Sidebar';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProductReviews, clearErrors, deleteReviews } from '../../actions/productActions';\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants';\n\nfunction ProductReviews() {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const { error, reviews } = useSelector(state => state.productReviews);\n    const { user, isAuthenticated } = useSelector(state => state.auth);\n    const { isDeleted } = useSelector(state => state.review);\n\n    const [productId, setProductId] = useState('')\n\n    const deleteReviewHandler = (id) => {\n        dispatch(deleteReviews(id, productId));\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(getProductReviews(productId))\n    }\n\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n\n            dispatch(clearErrors())\n        }\n\n        if(isDeleted) {\n            alert.success('Review deleted successfully');\n            dispatch({\n                type: DELETE_REVIEW_RESET\n            })\n            dispatch(getProductReviews(productId));\n        }\n\n\n    }, [dispatch, alert, error, productId, isDeleted, navigate])\n\n\n    return (\n        <Fragment>\n\n            {isAuthenticated && user.role === 'admin' ? (\n                <Fragment>\n\n                    <MetaData title={'Product reviews'} />\n\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-3 col-lg-2\">\n                            <Sidebar />\n                        </div>\n\n                        <div className=\"col-12 col-md-9 col-lg-10\">\n                            <h1 className=\"my-4\">Product reviews</h1>\n\n                            <div className=\"row justify-content-center mt-5\">\n                                <div className=\"col-5\">\n                                    <form onSubmit={submitHandler}>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"productId_field\">Enter Product ID</label>\n                                            <input\n                                                type=\"text\"\n                                                id=\"productId_field\"\n                                                className=\"form-control\"\n                                                value={productId}\n                                                onChange={(e) => setProductId(e.target.value)}\n                                            />\n                                        </div>\n\n                                        <button\n                                            id=\"search_button\"\n                                            type=\"submit\"\n                                            className=\"btn btn-primary btn-block py-2\"\n                                            disabled={productId ? false : true}\n                                        >\n                                            SEARCH\n                                        </button>\n                                    </ form>\n                                </div>\n\n                            </div>\n\n                            {reviews && reviews.length > 0 ? (\n\n                                <div className=\"table-responsive\">\n                                    <table className=\"table table-striped table-hover\">\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\">Review ID</th>\n                                                <th scope=\"col\">Rating</th>\n                                                <th scope=\"col\">Comment</th>\n                                                <th scope=\"col\">User</th>\n                                                <th scope=\"col\">Actions</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n\n                                            {reviews && reviews.map(review => {\n                                                return (<tr key={review._id}>\n                                                    <th scope=\"row\">{review._id}</th>\n                                                    <td>{review.rating}</td>\n                                                    <td>{review.comment}</td>\n                                                    <td>{review.name}</td>\n                                                    <td>{review.role}</td>\n                                                    <td>\n                                                        <button className=\"btn btn-danger py-1 px-2 ms-2\" onClick={() => deleteReviewHandler(review._id)}>\n                                                            <i className=\"fa fa-trash\"></i>\n                                                        </button>\n                                                    </td>\n                                                </tr>)\n                                            })}\n                                        </tbody>\n                                    </table>\n                                </div>\n\n\n                            ) : (\n                                <p className=\"mt-5 text-center\">No reviews yet</p>\n                            )}\n\n\n                        </div>\n                    </div>\n\n\n\n                </Fragment>\n            ) : (\n                <Navigate to=\"/\" />\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default ProductReviews\n","import React, { Fragment, useEffect } from 'react'\nimport { Link, useParams } from 'react-router-dom';\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport MetaData from '../layouts/MetaData';\nimport Loader from '../layouts/Loader'\nimport { getOrderDetails, clearErrors } from '../../actions/orderActions';\n\n\nfunction OrderDetails() {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const params = useParams();\n\n    const { loading, error, order={} } = useSelector(state => state.orderDetails);\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order;\n\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`;\n\n    let isPaid = false;\n\n    if (paymentInfo) {\n        if (paymentInfo.status === 'COD' || paymentInfo.status === 'succeeded') {\n            isPaid = true;\n        } else {\n            isPaid = false;\n        }\n    }\n\n    useEffect(() => {\n        dispatch(getOrderDetails(params.id));\n\n        if (error) {\n            alert.error(error);\n\n            dispatch(clearErrors())\n        }\n    }, [dispatch, alert, error, params.id])\n\n    return (\n        <Fragment>\n            <MetaData title={'Order Details'} />\n\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <div className=\"row d-flex justify-content-between\">\n                        <div className=\"col-12 col-lg-8 mt-5 order-details\">\n\n                            <h1 className=\"my-5\">Order # {order._id}</h1>\n\n                            <h4 className=\"mb-4\">Shipping Info</h4>\n                            <p><b>Name:</b> {user && user.name}</p>\n                            <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\n                            <p className=\"mb-4\"><b>Address:</b> {shippingDetails}</p>\n                            <p><b>Amount:</b> ${totalPrice}</p>\n\n                            <hr />\n\n\n                            <h4 className=\"my-4\">Payment</h4>\n                            <p className={isPaid ? \"greenColor\" : \"redColor\"} ><b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b></p>\n\n                            <h4 className=\"my-4\">Order Status:</h4>\n                            <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? 'greenColor' : 'redColor'}><b>{orderStatus}</b></p>\n\n\n\n                            <h4 className=\"my-4\">Order Items:</h4>\n\n                            <hr />\n                            <div className=\"cart-item my-1\">\n                                {orderItems && orderItems.map(item => (\n                                    <div className=\"row my-5\" key={item.product}>\n                                    <div className=\"col-4 col-lg-2\">\n                                        <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\n                                    </div>\n\n                                    <div className=\"col-5 col-lg-5\">\n                                        <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                    </div>\n\n\n                                    <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                        <p>${item.price}</p>\n                                    </div>\n\n                                    <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                        <p>{item.quantity} Piece(s)</p>\n                                    </div>\n                                </div>\n                                ))}\n                                \n                            </div>\n                            <hr />\n                        </div>\n                    </div>\n                </Fragment>\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default OrderDetails\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, Navigate } from 'react-router-dom';\nimport { clearErrors, deleteCategory, getCategories, newCategory } from '../../actions/categoryActions';\nimport { DELETE_CATEGORY_RESET, NEW_CATEGORY_RESET } from '../../constants/categoryConstants';\nimport Loader from '../layouts/Loader';\nimport MetaData from '../layouts/MetaData';\nimport Sidebar from './Sidebar';\n\nfunction CategoryList() {\n\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, categories } = useSelector(state => state.categories);\n    const { user, isAuthenticated } = useSelector(state => state.auth);\n    const { error: updateError, success, isDeleted } = useSelector(state => state.newCategory);\n\n    const deleteCategoryHandler = (id) => {\n\n        dispatch(deleteCategory(id))\n    }\n\n    const newCategoryHandler = (e) => {\n        e.preventDefault();\n        console.log(categoryName)\n\n        const formData = new FormData();\n        formData.set('name', categoryName);\n\n\n        dispatch(newCategory(formData))\n    }\n\n    const [categoryName, setCategoryName] = useState('')\n\n\n    useEffect(() => {\n        dispatch(getCategories());\n\n        if (error) {\n            alert.error(error);\n\n            dispatch(clearErrors())\n        }\n\n        if (updateError) {\n            alert.error(updateError);\n            dispatch(clearErrors());\n        }\n\n        if (success) {\n            alert.success('Category added successfully');\n\n            setCategoryName('')\n\n            dispatch({\n                type: NEW_CATEGORY_RESET\n            })\n\n            dispatch(getCategories());\n        }\n\n        if (isDeleted) {\n            alert.success('Category deleted successfully');\n\n            dispatch({\n                type: DELETE_CATEGORY_RESET\n            })\n\n            dispatch(getCategories())\n        }\n\n\n    }, [dispatch, alert, error, updateError, success, isDeleted])\n\n\n    return (\n        <Fragment>\n\n            {isAuthenticated && user.role === 'admin' ? (\n                <Fragment>\n\n                    <MetaData title={'All categories'} />\n\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-3 col-lg-2\">\n                            <Sidebar />\n                        </div>\n\n                        <div className=\"col-12 col-md-9 col-lg-10\">\n                            <Fragment>\n                                <div className=\"wrapper my-5\">\n                                    <form className=\"shadow-lg\" onSubmit={newCategoryHandler}>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"name_field\">Category Name</label>\n                                            <input\n                                                type=\"text\"\n                                                id=\"name_field\"\n                                                className=\"form-control\"\n                                                value={categoryName}\n                                                onChange={(e) => setCategoryName(e.target.value)}\n                                            />\n                                        </div>\n\n                                        <button\n                                            id=\"login_button\"\n                                            type=\"submit\"\n                                            className=\"btn btn-block py-3\"\n                                            disabled={loading ? true : false}\n                                        >\n                                            CREATE\n                                        </button>\n                                    </form>\n                                </div>\n                            </Fragment>\n                            <h1 className=\"my-4\">All Categories</h1>\n\n                            {loading ? <Loader /> : (\n                                <table className=\"table table-striped\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">Name</th>\n                                            <th scope=\"col\">ID</th>\n                                            <th scope=\"col\">Number of subCat</th>\n                                            <th scope=\"col\">Actions</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n\n                                        {categories && categories.length > 0 && categories.map(category => {\n                                            return (<tr key={category._id}>\n                                                <th scope=\"row\">{category.name}</th>\n                                                <td>{category._id}</td>\n                                                <td>{category.subCategories.length}</td>\n                                                <td>{\n                                                    <Fragment>\n                                                        <Link to={`/admin/category/${category._id}`} className=\"btn btn-primary py-1 px-2\" >\n                                                            <i className=\"fa fa-pencil\"></i>\n                                                        </Link>\n                                                        <button className=\"btn btn-danger py-1 px-2 ms-2\" onClick={() => deleteCategoryHandler(category._id)} >\n                                                            <i className=\"fa fa-trash\"></i>\n                                                        </button>\n                                                    </Fragment>\n                                                }</td>\n                                            </tr>)\n                                        })}\n                                    </tbody>\n                                </table>\n\n                            )}\n                        </div>\n                    </div>\n\n\n\n                </Fragment>\n            ) : (\n                <Navigate to=\"/login\" />\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default CategoryList\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { Navigate, useNavigate, useParams } from 'react-router-dom';\n\nimport MetaData from '../layouts/MetaData';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearErrors, newSubCategory, updateCategory, updateSubCategory, deleteSubCategory } from '../../actions/categoryActions';\nimport Sidebar from './Sidebar';\nimport { UPDATE_CATEGORY_RESET, NEW_SUBCATEGORY_RESET, DELETE_SUBCATEGORY_RESET } from '../../constants/categoryConstants';\nimport { getCategory } from '../../actions/categoryActions';\nimport Loader from '../layouts/Loader';\n\nconst UpdateCategory = () => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const params = useParams();\n\n    const { success, isDeleted, error: createError } = useSelector(state => state.newCategory);\n    const { user, isAuthenticated } = useSelector(state => state.auth)\n    const { category, loading, error } = useSelector(state => state.categoryDetails);\n\n    const [categoryName, setCategoryName] = useState('');\n    // const [subCategories, setSubCategories] = useState([]);\n    const [subCategoryChange, setSubCategoryChange] = useState('');\n    const [subCategoryChangeId, setSubCategoryChangeId] = useState(null);\n    const [newSubCategoryName, setNewSubCategoryName] = useState('');\n\n\n    const [offerPercentage, setOfferPercentage] = useState(0);\n    const [offerDetails, setOfferDetails] = useState('');\n    // const [category, setCategory] = useState('');\n\n    // const categories = [\n    //     'Electronics',\n    //     'Cameras',\n    //     'Laptops',\n    //     'Accessories',\n    //     'Headphones',\n    //     'Food',\n    //     'Books',\n    //     'Clothes/shoes',\n    //     'Beauty/health',\n    //     'Sports',\n    //     'Outdoor',\n    //     'Home'\n    // ]\n\n    const categoryId = params.id;\n\n    useEffect(() => {\n\n        if (category && category._id !== categoryId) {\n            dispatch(getCategory(categoryId))\n        } else {\n            setCategoryName(category.name);\n            // setSubCategories(category.subCategories);\n        }\n\n        if (error) {\n            alert.error(error);\n\n            dispatch(clearErrors())\n        }\n\n        if (createError) {\n            alert.error(createError);\n            dispatch(clearErrors())\n        }\n\n        if (isDeleted) {\n            alert.success('SubCategory deleted successfully')\n            dispatch({\n                type: DELETE_SUBCATEGORY_RESET\n            })\n\n            dispatch(getCategory(categoryId))\n            setSubCategoryChange('')\n            setSubCategoryChangeId('')\n        }\n\n        if (success) {\n\n            alert.success('Category updated successfully');\n            setSubCategoryChange('')\n            setSubCategoryChangeId('')\n            setOfferDetails('')\n            setOfferPercentage(0)\n            dispatch({\n                type: UPDATE_CATEGORY_RESET\n            })\n            dispatch({\n                type: NEW_SUBCATEGORY_RESET\n            })\n            dispatch(getCategory(categoryId))\n        }\n    }, [dispatch, alert, error, createError, success, navigate, category, categoryId, isDeleted])\n\n    /* ------------------------- update categoryhandler ------------------------- */\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n\n        dispatch(updateCategory(categoryId, categoryName))\n    }\n\n    /* ------------------------- new subCategory handler ------------------------ */\n\n    const newSubCategoryHandler = (e) => {\n\n        e.preventDefault();\n\n        dispatch(newSubCategory(categoryId, newSubCategoryName))\n\n    }\n\n    /* ------------------------ update SubCategoryHandler ----------------------- */\n\n    const updateSubCategoryHandler = (e) => {\n        e.preventDefault();\n        const data = {\n            id: categoryId,\n            subId: subCategoryChangeId,\n            sub: subCategoryChange,\n            offerPercentage,\n            offerDetails\n        }\n        dispatch(updateSubCategory(data))\n    }\n\n    /* ----------------------- delete subCategory handler ----------------------- */\n\n    const deleteSubCategoryHandler = (e) => {\n        e.preventDefault();\n        dispatch(deleteSubCategory(categoryId, subCategoryChange))\n    }\n\n\n    return (\n        <Fragment>\n\n            {isAuthenticated && user.role === 'admin' ? (\n                <Fragment>\n\n                    <MetaData title={'Update category'} />\n\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-3 col-lg-2\">\n                            <Sidebar />\n                        </div>\n\n\n                        <div className=\"col-12 col-md-5 col-lg-5\">\n                            <Fragment>\n                                <div className=\"wrapper my-5\">\n                                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                        <h1 className=\"mb-4\">Update category</h1>\n\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"name_field\">Category Name</label>\n                                            <input\n                                                type=\"text\"\n                                                id=\"name_field\"\n                                                className=\"form-control\"\n                                                value={categoryName}\n                                                onChange={(e) => setCategoryName(e.target.value)}\n                                            />\n                                        </div>\n\n\n\n                                        <button\n                                            id=\"login_button\"\n                                            // type=\"submit\"\n                                            className=\"btn btn-block py-3\"\n\n                                            disabled={loading ? true : false}\n                                        >\n                                            Update\n                                        </button>\n\n                                    </form>\n                                </div>\n\n                            </Fragment>\n\n                        </div>\n                        <div className=\"col-12 col-md-4 col-lg-5\">\n\n\n                            {loading ? <Loader /> : (\n\n\n                                <Fragment>\n\n                                    <div className=\"wrapper my-5\">\n                                        <form className=\"shadow-lg\" encType='multipart/form-data'>\n                                            <h1 className=\"mb-4\">create Sub Category</h1>\n\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"name_field\">New Sub Category Name</label>\n                                                <input\n                                                    type=\"text\"\n                                                    id=\"name_field\"\n                                                    className=\"form-control\"\n                                                    value={newSubCategoryName}\n                                                    onChange={(e) => setNewSubCategoryName(e.target.value)}\n                                                />\n                                            </div>\n\n\n\n\n                                            <button\n                                                id=\"login_button\"\n                                                // type=\"submit\"\n                                                className=\"btn btn-block py-3\"\n                                                disabled={loading ? true : false}\n                                                onClick={newSubCategoryHandler}\n                                            >\n                                                Add new subCategory\n                                            </button>\n\n                                            <hr />\n\n                                            <h1 className=\"mb-4\">Edit Sub Category</h1>\n\n\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"Sub_category_field\">select Sub Category</label>\n                                                <div className=\"list-group\">\n\n                                                    {category.subCategories && category.subCategories.map(subCategory => (\n                                                        <button type=\"button\" className=\"list-group-item list-group-item-action\" onClick={() => {\n                                                            setSubCategoryChangeId(subCategory._id)\n                                                            setSubCategoryChange(subCategory.name)\n                                                            setOfferPercentage(subCategory.offerPercentage)\n                                                            setOfferDetails(subCategory.offerDetails)\n                                                        }}>\n                                                            {subCategory.name} &nbsp;&nbsp;{subCategory.offerPercentage !== 0 && <i className=\"fa fa-star\"></i>}\n                                                        </button>\n                                                    ))}\n                                                </div>\n                                            </div>\n\n\n                                            {subCategoryChangeId && <Fragment>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"name_field\">Set new Category Name</label>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"name_field\"\n                                                        className=\"form-control\"\n                                                        value={subCategoryChange}\n                                                        onChange={(e) => setSubCategoryChange(e.target.value)}\n                                                    />\n                                                </div>\n\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"stock_field\">Offer Percentage</label>\n                                                    <input\n                                                        type=\"number\"\n                                                        id=\"stock_field\"\n                                                        className=\"form-control\"\n                                                        value={offerPercentage}\n                                                        onChange={(e) => {\n                                                            setOfferPercentage(e.target.value)\n                                                        }}\n                                                    />\n\n                                                </div>\n                                                {offerPercentage !== 0 &&\n                                                    <div className=\"form-group\">\n                                                        <label htmlFor=\"seller_field\">Offer Details</label>\n                                                        <input\n                                                            type=\"text\"\n                                                            id=\"seller_field\"\n                                                            className=\"form-control\"\n                                                            value={offerDetails}\n                                                            onChange={(e) => setOfferDetails(e.target.value)}\n                                                        />\n                                                    </div>\n                                                }\n\n                                                <button\n                                                    id=\"login_button\"\n                                                    // type=\"submit\"\n                                                    onClick={updateSubCategoryHandler}\n                                                    className=\"btn btn-block py-3 ms-3\"\n                                                    disabled={loading ? true : false}\n                                                >\n                                                    Update\n                                                </button>\n\n                                                <button\n                                                    id=\"login_button\"\n                                                    // type=\"submit\"\n                                                    onClick={deleteSubCategoryHandler}\n                                                    className=\"btn bg-danger btn-block ms-3 py-3\"\n                                                    disabled={loading ? true : false}\n                                                >\n                                                    delete\n                                                </button>\n                                            </Fragment>}\n                                        </form>\n\n\n\n                                    </div>\n\n                                </Fragment>\n\n                            )}\n\n                        </div>\n\n                    </div>\n\n\n\n                </Fragment>\n            ) : (\n                <Navigate to=\"/\" />\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default UpdateCategory\n\n\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { Navigate } from 'react-router-dom';\nimport { useReactToPrint } from \"react-to-print\";\n\nimport MetaData from '../layouts/MetaData';\nimport Loader from '../layouts/Loader';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterOrders, clearErrors } from '../../actions/orderActions';\nimport Sidebar from './Sidebar';\nimport { FILTER_ORDERS_RESET } from '../../constants/orderConstants';\n\nconst SalesReport = () => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, orders, success } = useSelector(state => state.allOrders);\n    const { user, isAuthenticated } = useSelector(state => state.auth);\n\n    const [startDate, setStartDate] = useState(null)\n    const [endDate, setEndDate] = useState(null)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n\n            dispatch(clearErrors())\n        }\n\n        if(success) {\n            alert.success('Report filtered successfully')\n            dispatch({\n                type: FILTER_ORDERS_RESET\n            })\n        }\n\n\n    }, [dispatch, alert, error, orders, success])\n\n    const filterHandler = () => {\n        dispatch(filterOrders(startDate, endDate))\n    }\n\n    //print management\n\n    const componentRef = React.useRef(null);\n\n    const reactToPrintContent = React.useCallback(() => {\n        return componentRef.current;\n      }, []);\n\n    const handlePrint = useReactToPrint({\n        content: reactToPrintContent,\n        documentTitle: \"Sales Report - OliveZone\",\n        // onBeforeGetContent: handleOnBeforeGetContent,\n        // onBeforePrint: handleBeforePrint,\n        // onAfterPrint: handleAfterPrint,\n        removeAfterPrint: true\n      });\n\n    return (\n        <Fragment>\n\n            {isAuthenticated && user.role === 'admin' ? (\n                <Fragment>\n\n                    <MetaData title={'All orders'} />\n\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-3 col-lg-2\">\n                            <Sidebar />\n                        </div>\n\n                        <div className=\"col-12 col-md-9 col-lg-10\">\n                            <h1 className=\"my-4\">Sales Report</h1>\n                            <div className=\"row\">\n                                <div className=\"col-12 col-md-6\">\n                                    from <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)}/> &nbsp; &nbsp;\n                                    to <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)}/>\n                                    <button className=\"btn btn-primary py-1 px-3 mx-3\" onClick={filterHandler}>Filter</button>\n                                </div>\n                                <div className=\"col-12 col-md-6\">\n                                    <button onClick={handlePrint}>Print</button>\n                                </div>\n                            </div>\n\n                            {loading ? <Loader /> : (\n                                <table className=\"table table-striped\" ref={componentRef} >\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">Order ID</th>\n                                            <th scope=\"col\">User Name</th>\n                                            <th scope=\"col\">User Email</th>\n                                            <th scope=\"col\">Created At</th>\n                                            <th scope=\"col\">Number of Items</th>\n                                            <th scope=\"col\">Amount</th>\n                                            <th scope=\"col\">Status</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n\n                                        {orders && orders.map(order => {\n                                            return (<tr key={order._id}>\n                                                <th scope=\"row\">{order._id}</th>\n                                                <td>{order.user.name}</td>\n                                                <td>{order.user.email}</td>\n                                                <td>{JSON.stringify(order.createdAt).substring(1,11)}</td>\n                                                <td>{order.orderItems.length}</td>\n                                                <td>{order.totalPrice}</td>\n                                                <td>{order.orderStatus && String(order.orderStatus).includes('Delivered')\n                                                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\n                                                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>}</td>\n\n                                            </tr>)\n                                        })}\n                                    </tbody>\n                                </table>\n\n                            )}\n                        </div>\n                    </div>\n\n\n\n                </Fragment>\n            ) : (\n                <Navigate to=\"/\" />\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default SalesReport\n","import { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\n// import axios from 'axios'\n\nimport './App.css';\nimport Home from './components/Home';\nimport Footer from './components/layouts/Footer';\nimport Header from './components/layouts/Header';\nimport ProductDetails from './components/product/ProductDetails';\nimport Login from './components/user/Login';\nimport Register from './components/user/Register';\n\nimport { loadUser } from './actions/userActions';\nimport store from './store';\nimport Profile from './components/user/Profile';\nimport UpdateProfile from './components/user/UpdateProfile';\nimport UpdatePassword from './components/user/UpdatePassword';\nimport ForgotPassword from './components/user/ForgotPassword';\nimport NewPassword from './components/user/NewPassword';\nimport Cart from './components/cart/Cart';\nimport Shipping from './components/cart/Shipping';\nimport ConfirmOrder from './components/cart/ConfirmOrder';\nimport Payment from './components/cart/Payment';\nimport OrderSuccess from './components/cart/OrderSuccess';\nimport ListOrders from './components/order/ListOrders';\nimport Dashboard from './components/admin/Dashboard';\nimport ProductsList from './components/admin/ProductsList';\nimport NewProduct from './components/admin/NewProduct';\nimport { useSelector } from 'react-redux';\nimport UpdateProduct from './components/admin/UpdateProduct';\nimport OrdersList from './components/admin/OrdersList';\nimport ProcessOrder from './components/admin/ProcessOrder';\nimport UsersList from './components/admin/UsersList';\nimport UpdateUser from './components/admin/UpdateUser';\nimport ProductReviews from './components/admin/ProductReviews';\nimport OrderDetails from './components/order/OrderDetails';\nimport CategoryList from './components/admin/CategoryList';\nimport UpdateCategory from './components/admin/UpdateCategory';\nimport SalesReport from './components/admin/SalesReport';\n\n// Payment\n// import { Elements } from '@stripe/react-stripe-js'\n// import { loadStripe } from '@stripe/stripe-js'\n\n// import ProtectedRoute from './components/route/ProtectedRoute'\n\n\nfunction App() {\n\n  // const [stripeApiKey, setStripeApiKey] = useState('')\n\n  const { user, isAuthenticated, loading } = useSelector(state => state.auth)\n\n  \n\n  useEffect(() => {\n    store.dispatch(loadUser());\n\n    // async function getStripeApiKey() {\n    //   const { data } = await axios.get('/api/v1/stripe/api');\n    //   setStripeApiKey(data.stripeApiKey)\n    // }\n\n    // getStripeApiKey();\n  }, [])\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <div className=\"container container-fluid\">\n          <Routes>\n\n\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/search/:keyword\" element={<Home />} />\n            <Route path=\"/product/:id\" element={<ProductDetails />} />\n\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/register\" element={<Register />} />\n            <Route path=\"/me\" element={<Profile />} />\n            <Route path=\"/me/update\" element={<UpdateProfile />} />\n            <Route path=\"/password/update\" element={<UpdatePassword />} />\n            <Route path=\"/password/forgot\" element={<ForgotPassword />} />\n            <Route path=\"/password/reset/:token\" element={<NewPassword />} />\n            <Route path=\"/cart\" element={<Cart />} />\n            <Route path=\"/shipping\" element={<Shipping />} />\n            <Route path=\"/order/confirm\" element={<ConfirmOrder />} />\n            {/* {stripeApiKey && */}\n\n            <Route path=\"/payment\" element={<Payment />} />\n            {/* } */}\n\n            <Route path=\"/success\" element={<OrderSuccess />} />\n            <Route path=\"/orders/me\" element={<ListOrders />} />\n            <Route path=\"/orders/:id\" element={<OrderDetails />} />\n\n\n\n          </Routes>\n        </div>\n        <Routes>\n          <Route path=\"/dashboard\" element={<Dashboard />} />\n          <Route path=\"/admin/products\" element={<ProductsList />} />\n          <Route path=\"/admin/product\" element={<NewProduct />} />\n          <Route path=\"/admin/product/:id\" element={<UpdateProduct />} />\n          <Route path=\"/admin/orders\" element={<OrdersList />} />\n          <Route path=\"/admin/order/:id\" element={<ProcessOrder />} />\n          <Route path=\"/admin/users\" element={<UsersList />} />\n          <Route path=\"/admin/user/:id\" element={<UpdateUser />} />\n          <Route path=\"/admin/reviews\" element={<ProductReviews />} />\n          <Route path=\"/admin/categories\" element={<CategoryList />} />\n          <Route path=\"/admin/category/:id\" element={<UpdateCategory />} />\n          <Route path=\"/admin/salesreport\" element={<SalesReport />} />\n\n        </Routes>\n        \n        {!loading && user && isAuthenticated && user.role === 'admin' ? null : <Footer /> }\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport { positions, transitions, Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic';\n\nconst options = {\n  timeout: 5000,\n  position: positions.BOTTOM_CENTER,\n  transition: transitions.SCALE\n}\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <AlertProvider template={AlertTemplate} {...options} >\n    <App />\n    </AlertProvider>\n  </Provider >,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}